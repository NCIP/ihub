<!-- An Ant build file for Mirth Ant Tasks -->

<project name="Mirth Shell Ant Tasks" default="test" basedir="." xmlns:mirth="http://ihub.nci.nih.gov/mirth/ant">

	<!-- Read in user specific properties -->
	
	<!-- <property file="local.shell_Ant.properties"/> -->
	<property name="root" value="." />
	<property name="target_dir" value="${root}/target" />
	<property name="dist_dir" value="${target_dir}/dist" />
	<property name="userid" value=""/>
	<property name="pswd" value=""/>
	<property name="name" value=""/>
	<property name="email" value=""/>	
	<property name="allChannels" value=""/>	
	<!--<property file="./build.properties"/>-->

	<!--  Classpaths   -->

	<path id="classpath.shell.ant">
		<fileset dir="${mirth_home}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${mirth_home}/lib/custom">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${mirth_home}/client-lib">
			<include name="*.jar"/>
		</fileset>		
		<!--<fileset dir=".">
					<include name="*.jar"/>
				</fileset>		-->
	</path>


	<!--+
    |
    |  Task Definitions
    |
    +-->

	<typedef resource="gov/nih/nci/ihub/util/ant/antlib.xml" uri="http://ihub.nci.nih.gov/mirth/ant">
		<classpath refid="classpath.shell.ant"/>
	</typedef>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="classpath.shell.ant" />

	<!--  Init Target  -->

	<target name="init">
		<!--  root directories -->

		<!--<property name="resouces.dir"                value="${basedir}/resources"/>-->
		<property name="output_dir"              value="${root}/output"/>

		<mkdir dir="${output_dir}" />

	</target>


	<!--+
    |
    |  Test Targets
    |
    +-->

	<target name="test" depends="init" description="Test Mirth Ant Tasks" >
		<!-- Server tests -->
		<echo>Running Mirth Shell Ant Task Tests...</echo>
		<echo>Server: ${server}</echo>
		<echo>User:   ${user}</echo>
		<echo/>
		<echo>Current Status:</echo>

		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="status" depends="init" description="Lists the status of all deployed channels" >
		<echo>Current Status:</echo>
		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="start" depends="init" description="Starts all deployed channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>
		<echo>Starting all channels</echo>
		<mirth:start user="${user}" password="${password}" server="${server}"/>
		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
		</then> 
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Starting channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="start"/>
					<mirth:status user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not start channel</echo>
				<echo>No arguments specified, please specify boolean value for property "allChannels"</echo>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>
	</target>

	<target name="stop" depends="init" description="Stops all deployed channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>			
				<echo>Stopping all channels</echo>
				<mirth:stop user="${user}" password="${password}" server="${server}"/>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
			<echo/>
			</then> 
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Stopping channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="stop"/>
					<mirth:status user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not stop channels</echo>
				<echo>No arguments specified, please specify boolean value for argument "allChannels"</echo>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>		
	</target>

	<target name="pause" depends="init" description="Pauses all deployed channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>
				<echo>Pausing all channels</echo>
				<mirth:pause user="${user}" password="${password}" server="${server}"/>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</then> 
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Pausing channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="pause"/>
					<mirth:status user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not pause channels</echo>
				<echo>No arguments specified, please specify boolean value for argument "allChannels"</echo>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>
	</target>

	<target name="resume" depends="init" description="Resumes all paused channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>
				<echo>Resuming all channels</echo>
				<mirth:resume user="${user}" password="${password}" server="${server}"/>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</then>
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Resuming channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="resume"/>
					<mirth:status user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not resume channels</echo>
				<echo>No arguments specified, please specify boolean value for argument "allChannels"</echo>
				<mirth:status user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>
	</target>

	<target name="list" depends="init" description="Lists all Channels, deployed or not" >
		<echo>Listing all channels</echo>
		<mirth:list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="deploy" depends="init" description="Deploys all Channels" >
		<echo>Deploying all channels</echo>
		<mirth:deploy user="${user}" password="${password}" server="${server}" timeout="${timeout}"/>
		<mirth:list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="clear" depends="init" description="Removes all messages from all Channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>
				<echo>Clearing all channels</echo>
				<mirth:clear user="${user}" password="${password}" server="${server}"/>
				<mirth:list user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</then>
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Clearing channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="clear"/>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="stats"/>
					<mirth:list user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not clear channels</echo>
				<echo>No arguments specified, please specify boolean value for argument "allChannels"</echo>
				<mirth:list user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>
	</target>

	<target name="reset" depends="init" description="Resets the statistics for all Channels" >
		<if>
			<equals arg1="${allChannels}" arg2="true" />
			<then>
				<echo>Resetting all channels</echo>
				<mirth:reset user="${user}" password="${password}" server="${server}"/>
				<mirth:list user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</then>
			<elseif>
				<equals arg1="${allChannels}" arg2="false" />
				<then>
					<echo>Resetting channel: ${channel}</echo>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="reset"/>
					<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="stats"/>
					<mirth:list user="${user}" password="${password}" server="${server}"/>
					<echo/>
				</then>
			</elseif>
			<else>
				<echo>Count not reset channels</echo>
				<echo>No arguments specified, please specify boolean value for argument "allChannels"</echo>
				<mirth:list user="${user}" password="${password}" server="${server}"/>
				<echo/>
			</else>
		</if>			
	</target>
	
	<target name="enable" depends="init" description="Enables the specified channel">
		<echo>Enabling channel: ${channel}</echo>
		<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="enable"/>
        <mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>
	
	<target name="disable" depends="init" description="Disables the specified channel">
		<echo>Disabling channel: ${channel}</echo>
		<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="disable"/>
        <mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>
	
	<target name="stats" depends="init" description="displays statistics for the specified channel">
		<echo>Statistics for channel: ${channel}</echo>
		<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="stats"/>        
		<echo/>
	</target>
	
	<target name="removeChannel" depends="init" description="remove/delete the specified channel">
		<echo>Deleting channel: ${channel}</echo>
		<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="disable"/>
		<!--<mirth:deploy user="${user}" password="${password}" server="${server}" timeout="${timeout}"/>-->
		<mirth:channel-action user="${user}" password="${password}" server="${server}" channel="${channel}" action="remove"/>        
		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="dump" depends="init" description="Writes all channel statistics or events to specified file" >
		<echo>Dumping all stats/events</echo>
		<mirth:dump user="${user}" password="${password}" server="${server}" type="stats" filename="${output.dir}/${stats_filename}"/>
		<mirth:dump user="${user}" password="${password}" server="${server}" type="events" filename="${output.dir}/${events_filename}" failonerror="false"/>
		<echo/>
	</target>	

	<target name="import" depends="init" description="Imports channel specified by path. Optional force overwrites existing channels" >
		<echo>Importing Channels</echo>		
		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<for param="file">
			<path>
				<fileset dir="${channels_dir}" includes="**/*.xml"/>
				<fileset dir="${channels_dir}" includes="*.xml"/>
			</path>
			<sequential>
				<echo message="Importing Channel @{file}"/>
				
				<var name="id" unset="true"/>
				<xmlproperty file="@{file}"  keepRoot="false"/>
				<echo>Channel id: ${id}</echo>
				<antcall target="removeChannel">
					<param name="channel" value="${id}"/>
				</antcall>
				
				<mirth:import user="${user}" password="${password}" server="${server}" type="channel" filename="@{file}"/>				
				
			</sequential>
		</for>
		<mirth:deploy user="${user}" password="${password}" server="${server}" timeout="${timeout}"/>		
		<mirth:status user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="importcfg" depends="init" description="Imports the saved Mirth configuration specified by path" >
		<echo>Importing Config...</echo>
		<mirth:import user="${user}" password="${password}" server="${server}" type="config" filename="${conf.dir}/Mirth_Config.xml"/>
		<echo/>
	</target>

	<target name="importscript" depends="init" description="Imports the named global script from the file specified by path" >
		<echo>Importing Scripts: ${deployScript_name}</echo>
		<mirth:import user="${user}" password="${password}" server="${server}" type="script" script="deploy" filename="${deployScript_name}"/>
		<!--<mirth:import user="${user}" password="${password}" server="${server}" type="script" script="preprocessor" filename="${resources.dir}/preprocessor.js"/>
		<mirth:import user="${user}" password="${password}" server="${server}" type="script" script="postprocessor" filename="${resources.dir}/postprocessor.js"/>
		<mirth:import user="${user}" password="${password}" server="${server}" type="script" script="shutdown" filename="${resources.dir}/shutdown.js"/>-->
		<echo/>
	</target>
	
	<target name="importtemplate" depends="init" description="Imports the named code templates from the file specified by path" >
		<echo>Importing Code Templates: ${deployScript_name}</echo>
		<mirth:import user="${user}" password="${password}" server="${server}" type="template"  filename="${deployScript_name}"/>
		<echo/>
	</target>	

	<target name="export" depends="init" description="Exports the specified channel or channels to path" >
		<echo>Exporting Channel...</echo>
		<mirth:export user="${user}" password="${password}" server="${server}" type="channel" channel="${channel}" filename="${output.dir}/Mirth_Channel.xml"/>
		<echo/>
	</target>

	<target name="exportAll" depends="init" description="Exports all channels to path" >
		<echo>Exporting All Channels...</echo>
		<mirth:export user="${user}" password="${password}" server="${server}" type="channel" channel="*" filename="${output.dir}/Mirth_"/>
		<echo/>
	</target>

	<target name="exportcfg" depends="init" description="Exports the current Mirth configuration to path" >
		<echo>Exporting Config...</echo>
		<mirth:export user="${user}" password="${password}" server="${server}" type="config" filename="${output.dir}/Mirth_Config.xml"/>
		<echo/>
	</target>

	<target name="exportscript" depends="init" description="Exports the named global script to the file specified by path" >
		<echo>Exporting Scripts...</echo>
		<mirth:export user="${user}" password="${password}" server="${server}" type="script" script="deploy" filename="${output.dir}/Mirth_Deploy.js"/>
		<mirth:export user="${user}" password="${password}" server="${server}" type="script" script="preprocessor" filename="${output.dir}/Mirth_Preprocessor.js"/>
		<mirth:export user="${user}" password="${password}" server="${server}" type="script" script="postprocessor" filename="${output.dir}/Mirth_Postprocessor.js"/>
		<mirth:export user="${user}" password="${password}" server="${server}" type="script" script="shutdown" filename="${output.dir}/Mirth_Shutdown.js"/>
		<echo/>
	</target>
	
	<target name="listUser" depends="init" description="Lists the currently defined users" >
		<echo>Listing all users</echo>
		<mirth:user-list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="addUser" depends="init" description="Adds the specified user" >
		<echo>Adding a user</echo>
		<mirth:user-add user="${user}" password="${password}" server="${server}" userid="${userid}" pswd="${pswd}" name="${name}" email="${email}"/>
		<mirth:user-list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="changePwd" depends="init" description="Changes the specified user's password" >
		<echo>Changing a user password</echo>
		<mirth:user-changepw user="${user}" password="${password}" server="${server}" userid="${userid}" pswd="${pswd}"/>
		<mirth:user-list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>

	<target name="removeUser" depends="init" description="Removes the specified user" >
		<echo>Deleting a user</echo>
		<mirth:user-remove user="${user}" password="${password}" server="${server}" userid="${userid}"/>
		<mirth:user-list user="${user}" password="${password}" server="${server}"/>
		<echo/>
	</target>


	<!--+
    |
    |  Help Targets
    |
    +-->

	<target name="help">
	        <echo message="Building Mirth Ant library"/>
	        <echo message=""/>
	        <echo message="Usage: ant [ant options] target1 [target2 | target 3 | ...]"/>
	        <echo message=""/>
	        <echo message="Execute ant -projecthelp to get a list of public targets"/>
	</target>

</project>
