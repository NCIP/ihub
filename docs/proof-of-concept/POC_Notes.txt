POC - As on 07/29/2010
-------------------------------------------

1. Mirth Appliance which is commercial, supports enterprise deployment scenarios with SSL inbound and outbound support

2. Mirth Connect does not support SSL

3. Since mirth Administrator and Mirth server need a JRE to run, Tried to import the public key to the cacerts of the JRE and
	re-started the server and admin console. But still couldn't access SSL enabled web services. Also tried
	importing the certificate into the cacerts of the JDK's JRE, but didn't work either.
	
4. Inspected 2.0.0 beta code off of the trunk to see if it has SSL support. After inspection, I found out that SSL is not 
	part of the 2.0.0 beta. Also searched on the intenet and didn't find any answers or confirmation regarding
	what will be specifically available in 2.0.0.
	
5. All the text and features that are available on the Administrator console have a corresponding .java and .form files.
	Modified both the files and verified that .java files are used in the built distribution.
	
6. After experimenting with several source connectors (HTTP and SOAP (no SSL support), JMS Reader and Sender (No JMS 
	Container), determined that first integration scenario should be tried by using a Database Reader.
	
7. Created database schema with normalized tables to handle iHub request message. Compiled scripts to load the sample 
	messages into the database. If this scenario works, we will have to modify the caXchangeRequestProcessor running
	on Tomcat container, to insert the incoming messages into the database.
	
8. At this point, I am not sure if the incoming messages should be stored in a normalized format or as a a single XML
	text. It is not very clear yet on how to access the variables read in a SQL query in the database reader in  
	the filter/ transformers.

9. Once I get past the above step, plan is to implement a Javascript Writer destination connector to invoke our code.


I worked lots of late hours in the last 3 days on this and expecting to continue to do so.









POC - 07/30, 07/31, 08/01
-----------------------------------
1. Figured out that the out message in the source log should be used as a message template in the transformer instead of
	the data format used in the select statement on the SQL query.
	
2. Based on the above, concluded that the normalized schema format is the way to go instead of the whole input message 
	as an XML in the database.
	
3. Wrote a simple POJO and tried to invoke it, following the instructions in the mirth community. Implemented the
	javascript code in the "javascript writer". Got the error "TypeError: [JavaPackage gov.nih.nci.ihub.
	channeltest.InvokeDelegationService] is not a function, it is object". This error kept happening after
	numerous trial and errors
	
4. For this specific error above, one of the community members suggested using the "-d" option during javac command
	execution. Tried that but didn't fix the error.
	
5. Moved the java invoking code from "Javascript Writer" to "JavaScript Transformer Step". But the error remained the
	same. Again did several trial and errors here.
	
6. Posted the error with details on different approached taken to troubleshoot. Haven't received a reply to the post.

7. The jar file that I created for the java code, needed to be moved to the lib/custom folder. There were four more
	jar files in that folder by default. Opened one of the JAR files and compared it to the one I created. Didn't
	see any significant difference except for few entries in the manifest file that are irrelevant. Figured that 
	the default jar files were created using "Ant".
	
8. Tested by invoking one of the class files from the default jar files SUCCESSFULLY from the same "JavaScript 
	Transformer". 
	
9. Figured this issue may go away if I build the jar using Ant scripts. Wrote a quick build script and created the
	jar. Copied the jar to the lib/custom folder under mirth. Re-ran the test, but produced the same result.
	
10. Will continue to do more trial and errors while waining for somebody from Mirth community (free support)
	to reply to my post.










Notes on JAR conflict resolution
--------------------------------------------------------------------------

lib: removed xercesimpl.jar

lib: removed jaxb-impl.jar 

cus: removed xerces-impl-4.0.3.jar

lib: added xercesimpl.jar

cus: removed axix-1.2RC2

cus: removed jaxb-api and jaxb-impl


Reset the jars to working condition to mirth defaults.

Add half of the 148 custom jars. 74th jar is core-stubs-4.0.3. No errors in the server startup.
Launched the admin console without errors. No deployment units found and upon "deploy all"
following errors are listed in the eclipse console.
ERROR 2010-08-03 11:19:35,265 [main] org.apache.commons.digester.Digester: End event threw exception
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.commons.beanutils.MethodUtils.invokeMethod(MethodUtils.java:216)
	at org.apache.commons.digester.SetRootRule.end(SetRootRule.java:209)
	at org.apache.commons.digester.Rule.end(Rule.java:230)

Removed the first 37 jars. Last jar removed is caXchange-common-jar-2.2. Restarted the server, but hte error persisted.

Added back the first 37 and removed the second 37 jars. ALL TESTED SUCCESSFULLY. 

Consluded that the first 38 (accidentally selected 38th) jars are GOOD.

#############################################################

Split the remaining 36 into two and selected the first 18. ALL TESTED SUCCESSFULLY

Removed the first 18 and selected the bottom 18. This time the channel is not getting deployed. Upon
	deploy all, same error as show above.

Consluded that the first 56 (36 from above and 18 here) jars are GOOD.

#############################################################

Split the remaining 18 into two and selected the first 9. his time the channel is not getting deployed. Upon
	deploy all, same error as show above.
	
Removed the first 9 and selected the bottom 9.ALL TESTED SUCCESSFULLY

Concluded that 65 out of the overall top 74 jar files are GOOD

##############################################################

From the first 9, selected commons-logging-1.1.jar, commons-pool-1.2.jar and concurrent-1.1.jar. ALL TESTED
SUCCESSFULLY.

The other 5 are COPPA commons and pa related jar files. So, the following 6 jar files are removed from classpath
Coppa-commons-1.2.3.jar
CoppaPA-client-3.1.1.jar
CoppaPA-common-3.1.1.jar
CoppaPA-service-3.1.1.jar
CoppaPA-stubs-3.1.1.jar
CoppaPA-tests-3.1.1.jar

################################################################
########  BOTTOM 74 JAR FILES ##################################
Split the 74 into group of first 38 and 36 respectively. By adding the first 38 ALL TESTED SUCCESSFULLY

So, the conflicted jar file is in the bottom 36.


#################################################################
Split the bottom 36 into two. Added the first 18 to the classpath. ALL TESTED SUCCESSFULLY

So, the conflicted jar file is in the bottom 18

#################################################################
Split the bottom 18 into two. Added the first 9 to the classpath. ALL TESTED SUCCESSFULLY

So, the conflicted jar file is in the last 9.

#################################################################

Split the last 9 into two. Added the first 5 to the classpath. By adding the following 5 jars the INFO
messages started printing to the server console. Server started successfully. INFO messages also showing 
up on the Mirth Administrator dashboard. Chennel deployed successfully. Also system.out messages in the 
invoked java code are NOT getting printed. Other than these ALL TESTED SUCCESSFULLY

usage-packets-common-4.0.3.jar
usage-wsrf-tools-test-4.0.3.jar
verify-routing.jar
wsdl4j-1.1.jar
wss4j-4.0.3.jar

So, the conflicted jar files in in the last 4.

##################################################################

By adding the last four, got a SAXParserException.  Here are the jar files
xalan-4.0.3.jar
xerces-impl-4.0.3.jar
xmlbeans-2.3.0.jar
xmlsec-4.0.3.jar

Split the last 4 into two. Added the first 2 to the classptah. The SAXParserException remained.

Removed the first 2 and added the second 2 to the classpath. ALL TESTED SUCCESSFULLY with INFO messages.

So, the conflicted jar file is in xalan-4.0.3.jar or xerces-impl-4.0.3.jar

####################################################################

Added xalan-4.0.3.jar, Go the SAXParseException. 

Removed xalan-4.0.3.jar and added xerces-impl-4.0.3.jar. Got the Error deploying channels exception. However
the server started successfully message is showing up. This is the same error that may be happening with 
the COPPA related jar files.


############# CONSLUSION ############################
Removed xalan-4.0.3.jar or xerces-impl-4.0.3.jar from InvokdeDelegationServiceBean testing. ALL TESTED SUCCESSFULLY.
For now, moving forward by not including the above two jars in the Mirth server classpath.









Trouble shooting freeze issue
-------------------------------------------------------------

1. Issue might be in cds-stubs-jar
2. Removed axis-14.jar from mirth../server/lib/mule
3. FREEZE ISSUE is resolved after removing the axis-14.jar. But "No client transport named 'https' found!" error
	occured.








No client transport named 'https' found!
------------------------------------------------------------

1. Copied all the jars from mirth/lib folder and sub-folders to the mirth-jars of the standalone application.
2. After splitting the jars into half and like wise, found out that the issue is caused by "wsif.jar" file.
3. Removed the "wsif.jar" from mirth server classpath.








org.xml.sax.SAXException: Unable to create JavaBean
------------------------------------------------------------

1. Snapshot of the mirth jars NOT included in the testing process. Without these jars, delegation service
	lookup works.

/caBIGIntegrationHub/mirth_jars/axis-14.jar
/caBIGIntegrationHub/mirth_jars/axis14-commons-discovery-0.2.jar
/caBIGIntegrationHub/mirth_jars/axis14-jaxrpc.jar
/caBIGIntegrationHub/mirth_jars/axis14-saaj.jar
/caBIGIntegrationHub/mirth_jars/axis14-wsdl4j-1.6.2.jar
/caBIGIntegrationHub/mirth_jars/wsif.jar
/caBIGIntegrationHub/mirth_jars/xercesImpl.jar
/caBIGIntegrationHub/mirth_jars/xmlParserAPIs.jar










resolving Node.getTextContent - no such method error
--------------------------------------------------------------

1. Removed xml-apis.jar from mirth/lib folder. Removed xmlParserAPIs-2.6.0.jar from ihub/lib classpath. 
2. Removing xmlParserAPIs-2.6.0.jar resolved the issue.









org.w3c.dom.DOMException: NOT_SUPPORTED_ERR
--------------------------------------------------------------

1. Removed xml-apis.jar, xmlParserAPIs.jar from mirth/lib folder, but the error remained the same
2. Issue is code related. Went away by using Document.getDocumentElement() during node import.









JMS Writer Issues
------------------------------------------------------------

1. Added activemq-core-5.3.2.jar to lib/custom folder. Errors went away.











Incoming XML with Namespaces issue
-------------------------------------------------------------

1. Unchecked "Strip Namespaces" in the source transformer's message template properties
2. Added < default xml namespace = "namespace" > javascript step as the first step in the transformer









For XML pretty formatting, use the following in transformer step
---------------------------------------------------------------------------------

XML.prettyPrinting = true










To encode an XML, use the following two lines in javascript editor
-------------------------------------------------------------------------------

//importPackage(Packages.com.webreach.mirth.util);
//var encodedMessage = Entities.getInstance().encode(varResponseXML);



ACTION ITEMS:
.1 Request SVN repository for new caBIGIntegrationHub









POC Demo:
-----------------------------------------------------------------------------

C3PR Application:

https://ncias-c278-v.nci.nih.gov:25443/c3pr
dev1@nci / D3v1@NC1.gov



HL7v2 Data
-------------
Given: Deli
Family: Han
Birthtime: 19790501
Administrative Sex: F
Assigning Authority: KNUMC&2.....








SAXParseException during deployment to the downloaded mirth distribution
----------------------------------------------------------------------------

Removed xalan-2.7.0.jar from the lib/custom folder.











Stress Test Results
----------------------------------------------------------------------

1663 2KB HL7v2 messages to be converted to HL7v3 fromat.

Total Input v2 Files size: 6.49 MB

Total Output v3 Files size: 6.49 MB

Total time: 75 sec





caAdapter POC
------------------------------------------------------------------------
Complete the POC demo

For adding SOAP Listener endpoint, need to remove Axis based jars from custom folder

Removed axis-1.2RC2.jar and axis-url-1.2RC2.jar
Added mule/axis-14.jar


Level of Effort for Mirth migration
------------------------------------------------
ARC and Provision requests
	ARC
	Provision Target Tier
	
Build and Deployment
	
CXF based service on Tomcat to support syscnronous and non-grid based use cases
Move all the business components. Break them down into Suite and non-suite.
Documentation Migration
Unit and Integration Testing







java.lang.Exception: java.lang.NoClassDefFoundError
	at com.webreach.mirth.connectors.js.JavaScriptMessageDispatcher.doDispatch(JavaScriptMessageDispatcher.java:91)
------------------------------------------------------------------------------------------------------------------------
1. Added axis-1.2RC2.jar and axis-url-1.2RC2.jar. 
	Removed .mule/axis-14.jar

2. Subject Registration broadcaset worked but the Transformer Service didn't start.

3. Added mule/axis-14.jar. Still the same result as item 2 above.







On adding COPPA COMMONS AND COPPA-PA RELATED JARS - org.jboss.security.jndi.JndiLoginInitialContextFactory class not found exception
------------------------------------------------------------------------------------------------------------------------------------
1. Resolved by adding jboss-embedded-all.jar to the lib/custom folder.






SAXParseException while trying to add xalan.4.0.3.jar, that is required in getting subject using the
	COPPA credentials
-----------------------------------------------------------------------------------------------------------
1. Test code works with xalan.4.0.3.jar and gets the subject.
2. Test code fails with java.lang.NoClassDefFoundError: org/apache/xpath/compiler/FuncLoader when
	xalan.4.0.3.jar is removed.or if xalan 2.7.0.jar is added to the test classpath.
3. SAXParseException remains even after remoging xercesimpl.jar and xalan-4.0.3.jar and by adding
	xerces-2.8.1.jar and xalan-2.7.0.jar.






Error getting DelegatedCredentialReference on Tomcat:
java.lang.AbstractMethodError: javax.xml.parsers.DocumentBuilderFactory.setFeature(Ljava/lang/String;Z)V
	at gov.nih.nci.cagrid.opensaml.XML$ParserPool.&lt;init>(Unknown Source)
----------------------------------------
1. Removed cagrid 1.2 authentication jars and replacing with 1.3 jars.
	By doing this, request is sent to Mirth. But the credential delegation ref is blank and
	sysnchronous message is sent as an object name.
    
	Even while getting the delegatedcredential exception, on getting a SAMLSerializerFactory.class not found error,
	the message was still sent to Mirth. This should NOT be sent. Do not catch an exception there., 
2. After the above step, to get rid of the SAMLSerializerFactory class not found error, 
	added caGrid-gaards-core-1.3.jar to wsrf-ihub/lib folder
	
3. Removed xercesimpl.jar and added xercesImpl-2.8.1.jar.
	Error message changed to java.lang.NoClassDefFoundError: gov/nih/nci/cagrid/gridca/common/KeyUtil
4. Upgraded Dorian stubs also to 1.3
	Error changed to PermissionDeniedFault no class definition error.
5. Added cds 1.3 related jars
	Error changed to NoClassDefFoundError: org/jasig/cas/authentication/handler/AuthenticationException
6. Added "cas-server-core-3.1.jar".
	After adding above jar, got the "java.lang.NoSuchMethodError: 
	org.cagrid.gaards.websso.authentication.helper.impl.GridCredentialDelegatorImpl.&lt;init>(Ljava/lang/String;III)V"
	
	
----------------------------------------------
Trying to troubleshoot the above error without upgrading the cagrid jars to 1.3
-----------------------------
1. Removed xercesimpl.jar and added xercesImpl-2.8.1.jar.
	Error message changed to java.lang.NoClassDefFoundError: gov/nih/nci/cagrid/gridca/common/KeyUtil
2. Added caGrid-gridca-1.2.jar, caGrid-cds-stubs-1.2.jar, cas-server-3.0.5.jar from C:\ext\caGrid\projects\websso-client\ext\dependencies\default\jars
	After adding above jars, got the "java.lang.NoSuchMethodError: 
	org.cagrid.gaards.websso.authentication.helper.impl.GridCredentialDelegatorImpl.&lt;init>(Ljava/lang/String;III)V"
3. Removed CaXchangeRequestProcessor-tests.jar from wsrf-ihub/lib folder.
	NosuchMethodError reported above went away. But got NoClassDefFoundError: org/cagrid/gaards/cds/client/DelegationUserClient
4. Added "caGrid-cds-client-1.2.jar".
	Error occured: java.lang.NoClassDefFoundError: org/cagrid/gaards/cds/common/CredentialDelegationService
5. Added caGrid-cds-common-1.2.jar.
	Error occured: 2010-11-19 10:36:27,312 ERROR infrastructure.CaGridAuthenticationManager [http-58445-Processor25,getDelegatedCredentialReference:100] Error authentica
	ting. Error accessing the Delegation Service : The AXIS engine could not find a target service to invoke!  targetService is cagrid/credentialdelegationservi
	ce
6. Figured out that the URL typed in for Credential Delegation Service is incorrect. 
	BAD URL with lower case: https://cagrid-cds-stage.nci.nih.gov:8443/wsrf/services/cagrid/credentialdelegationservice
	GOOD URL: https://cagrid-cds-stage.nci.nih.gov:8443/wsrf/services/cagrid/CredentialDelegationService


	


Code deployed to distributed version of Mirth resulted in 
org.w3c.dom.DOMException: NOT_SUPPORTED_ERR: The implementation does not support
 the requested type of object or operation.
 -----------------------------------------------------------------------------------
 1. Removed xercesImpl-2.8.1.jar, xml-apis-1.3.04.jar, XmlSchema-1.4.2.jar from mirth_distribution/lib folder.
 	Error remained the same.
 2. Upon debugging the code, found out that the property set in the global scripts is different from the one read 
 	in the channels
 	
 	
javax.xml.transform.TransformerException: java.lang.RuntimeException: DOM Level 3 Not implemented
------------------------------------------------------------------------------------------------------
1. Removed xercesImpl-2.8.1.jar, xml-apis-1.3.04.jar and XmlSchema-1.4.2.jar from lib/custom folder
 	Error message did not change.
2. Removed xmlbeans-2.3.0.jar from lib/custom folder
3. Tried to use saxon net.sf.saxon.TransformerFactoryImpl and copied saxon9.jar intu lib/custom folder.
 	However, on Mirth startup, the following exception occured and Mirth didn't start successfully.
 	
 	ERROR 2010-11-23 10:40:34,687 [Thread-1] com.webreach.mirth.model.converters.DocumentSerializer: Unknown configuration option indent-number
	Exception in thread "Thread-1" java.lang.RuntimeException: java.lang.RuntimeException: Error occurred.  Cause: com.ibatis.common.xml.Nodelet
	Exception: Error parsing XML.  Cause: org.xml.sax.SAXParseException: Premature end of file.

4. For synchronous COPPA, resolved the issue by changing GenerateResponseBean return type for generateResponseFromTargetResponse method from Node to String (xml representation)
	No need to call IntegrationHubUtil's xmlToString and stringToDOMDocument document methods.

5. Ran into the same issue during asynchronous broadcasting. After detailed debugging, found out that the issue is happening during the IntegrationHubUtil.xmlToString method 
	invocation of the CaXchangeResponseMessageDocument to string conversion. Not happening during other document conversion. Resolved the issue by calling
	CaXchangeResponseMessageDocument.xmlText() in the GenerateResponseBean.generateResponseFromAggregatedResponse() and returning a String instead of a Node.
 
 




LAB_BASED_AE response is coming as a SUCCESS, on following error business condition.
--------------------------------------------------------------------------------------

<?xml version="1.0" encoding="UTF-8"?><targetResponse><targetServiceIdentifier>caAERS</targetServiceIdentifier><targetServiceOperation/><targetMessageStatus>RESPONSE</targetMessageStatus><targetBusinessMessage><xmlSchemaDefinition>gme://ccts.cabig/1.0/gov.nih.nci.cabig.ccts.domain</xmlSchemaDefinition><ns1:Acknowledgement xmlns:ns1="gme://ccts.cabig/1.0/gov.nih.nci.cabig.ccts.domain.loadlabs">
 <ns1:Status xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
 <ns1:Errors>
  <ns1:WsError>
   <ns1:ErrorCode>InvalidStudyOrPatient</ns1:ErrorCode>
   <ns1:ErrorDesc>Participant 00-00-00-0 not found in caAERS</ns1:ErrorDesc>
  </ns1:WsError>
 </ns1:Errors>
</ns1:Acknowledgement></targetBusinessMessage></targetResponse>






Error converting from Labviewer to CC request String: com.bea.xml.stream.xmloutputfactorybase Not found
-------------------------------------------------------------------------------------------------------
1. Removed jaxb-api.jar, jaxb-impl.jar,jaxb-xjc.jar from mirth non-custom jar directories.
	Error changed to javax.xml.stream.FactoryConfigurationError: Could not locate provider [com.ctc.wstx.stax.WstxOutputFactory]
				at javax.xml.stream.FactoryLocator.newInstance(FactoryLocator.java:55)
				at javax.xml.stream.FactoryLocator.find(FactoryLocator.java:145)
				at javax.xml.stream.FactoryLocator.find(FactoryLocator.java:114)
				at javax.xml.stream.XMLOutputFactory.newInstance(XMLOutputFactory.java:141)
				at org.apache.axiom.om.util.StAXUtils$9.run(StAXUtils.java:379)
	
2.Added wstx-asl-3.2.4.jar to lib/custom
	Transformation related error went away.




























Bugs Identified
---------------------------------------------------------
1. On broadcast of subject registration, when all the targets fail, a successful aggregated response is sent back where as an
	Error message is expected.
	
	
	
	
	
	

Things to Do
-----------------------------------------------------------
1. For the JMS Reader and Writer Channels, Tokenize the values, user, password, inbound/ outbound queue names, host and port in the exported 
	channel XML code. Derive the values from the properties file during deployment. This should be the second option because the tokens will
	be erased when channels are re-exported. The first option should be to set the global variables and use the variables where ever needed.
	
	Dynamic variables support for JMS Reader and Writer is not available in Mirth 1.8.2. It is available in the future Mirth connect 2.0.
	http://www.mirthcorp.com/community/issues/browse/MIRTH-1385

2. Move any database specific (example: PostgreSQL, MySQL, etc) into global scripts section.

	Done

3. Look into configuration to increase the java heap size for Mirth

4. In advanced configuration (Admin guide), if Mirth and Tomcat are deployed on a different box or if COPPA is deployed to a different
	target grid than the rest of the applications, "coppa.mirth.delegation.certificate.file.path" and "coppa.mirth.delegation.key.file.path"
	need to be updated in the Global Scripts using Mirth Administrator. Also the referenced cert and key files need to be downloaded and
	saved to the location specified above.

5. ORGANIZATION_BUSINESS_SERVICE, and PERSON_BUSINESS_SERVICE service type use cases for Labveiwer need to be implemented in a special approach.

6. Exception Handling Implementation

7. Implement easier way to change the log level.

8. Compile schema and data scripts for MySQL, Oracle.
	
9. Update caxchange.properties file and remove any Servicemix specific properties from that.

10. Create a channel configuration that manages the messages in the database and cleans up old records.
--------------------------------------------------

11. Move clinical connector related XSDs and wsdl files to the new code base.

12. Delete RegistrationInvocationStrategy code, since not needed.
	
	Done
	
13. Delete unused clinical connector classes.

14. Merge PB and OB business services invocation strategy and make it generic






Http Listener:
---------------------------------------------------------------
Request from a Firefox browser's address bar:

<?xml version="1.0" encoding="UTF-8"?>
<message>
    <synchronous_msg>%3Crequest%3E%3Cmetadata%3E%3Cuid%3E66b20b26-dc51-11df-9972-ddc780619c0d%3C/uid%3E%3Csourceformat%3EDELIMITED%3C/sourceformat%3E%3Ctargetformat%3EHL7V3%3C/targetformat%3E%3C/metadata%3E%3Cpayload%3ESantosh,Giambi,08/20/1968,Male,Duke%3C/payload%3E%3C/request%3E</synchronous_msg>
    <http.version>HTTP/1.1</http.version>
    <Connection>keep-alive</Connection>
    <User-Agent>Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.10) Gecko/20100914 Firefox/3.6.10</User-Agent>
    <Host>localhost</Host>
    <Accept-Encoding>gzip,deflate</Accept-Encoding>
    <http.method>GET</http.method>
    <Accept-Language>en-us,en;q</Accept-Language>
    <Accept-Charset>ISO-8859-1,utf-8;q</Accept-Charset>
    <Keep-Alive>115</Keep-Alive>
    <http.request>/</http.request>
    <Accept>text/html,application/xhtml+xml,application/xml;q</Accept>
</message>



Request using Apache Commons HttpClient:

<?xml version="1.0" encoding="UTF-8"?>
<message>
    <synchronous_msg>%3Crequest%3E%3Cmetadata%3E%3Cuid%3E66b20b26-dc51-11df-9972-ddc780619c0d%3C%2Fuid%3E%3Csourceformat%3EDELIMITED%3C%2Fsourceformat%3E%3Ctargetformat%3EHL7V3%3C%2Ftargetformat%3E%3C%2Fmetadata%3E%3Cpayload%3ESantosh%2CGiambi%2C08%2F20%2F1968%2CMale%2CDuke%3C%2Fpayload%3E%3C%2Frequest%3E</synchronous_msg>
    <Content-Length>301</Content-Length>
    <http.version>HTTP/1.1</http.version>
    <Host>localhost</Host>
    <User-Agent>Test Client</User-Agent>
    <http.method>POST</http.method>
    <http.request>/</http.request>
    <Content-Type>application/x-www-form-urlencoded</Content-Type>
</message>





Find PID for a particular port in use
----------------------------------------------
Netstat -a -n -o | findstr 1099




COPPA smoke test command
---------------------------------------
ant testCoppaService -Dpayload.file.name=PERSON_SEARCH.xml -Dservice.type=PERSON -Doperation.name=search -Dsynchronous=true




Kill Windows Update Restart Popup
---------------------------------------
sc stop wuauserv