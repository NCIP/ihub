<map>
	<entry>
		<string>Deploy</string>
		<string>// This script executes once when the mule engine is started
			// You only have access to the globalMap here to persist data

			globalMap.put("delegation.certificate.file.path","@delegation.certificate.file.path@");
			globalMap.put("delegation.key.file.path","@delegation.key.file.path@");
			globalMap.put("user.proxy.cache.time.to.live",600);

			globalMap.put("caAERS.registration.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/wsrf-caaers/services/cagrid/registrationconsumer");
			globalMap.put("CTOM.registration.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/ctom-wsrf/services/cagrid/registrationconsumer");
			globalMap.put("PSC.registration.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/wsrf-psc/services/cagrid/registrationconsumer");
			globalMap.put("register.subject.active.destination.count";,3);
			
			globalMap.put("caAERS.study.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/wsrf-caaers/services/cagrid/studyconsumer");
			globalMap.put("CTOM.study.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/ctom-wsrf/services/cagrid/studyconsumer");
			globalMap.put("PSC.study.url","@suite.gridsvc.protocol@://@suite.gridsvc.host@:@suite.gridsvc.port@/wsrf-psc/services/cagrid/studyconsumer");
			globalMap.put("STUDY_CREATION.active.destination.count",3);
			
			globalMap.put("coppa.person.url","@coppa.services.po.protocol@://@coppa.services.po.host@:@coppa.services.po.port@/wsrf/services/cagrid/Person");
			
			globalMap.put("target.grid.service.retry.attempts",3);
			
			globalMap.put("mirth.http.user.tomcat","tomcatuser");
			globalMap.put("mirth.http.password.tomcat","changeme");

			//UPDATE THE COUNT IF THE DESTINATION BROADCAST COUNT IS CHANGED FROM DEFAULT
			globalMap.put("register.subject.active.destination.count",3);

			

			// #########  ACTIVE MQ PROPERTIES - NEED NOT BE TOKENIZED SINCE CHANNELS CANNOT GET THESE VALUES USING VARIABLES ##########
			globalMap.put(&quot;amq.ihub.host&quot;,&quot;localhost&quot;);
			globalMap.put(&quot;amq.ihub.port&quot;,&quot;61616&quot;);
			globalMap.put(&quot;amq.ihub.user&quot;,&quot;user&quot;);
			globalMap.put(&quot;amq.ihub.password&quot;,&quot;password&quot;);
			globalMap.put(&quot;amq.ihub.inbound.queue.name&quot;,&quot;caxchangeInboundQueue&quot;);
			globalMap.put(&quot;amq.ihub.outbound.queue.name&quot;,&quot;caxchangeOutboundQueue&quot;);

			// #########  DATABASE PROPERTIES ##########
			globalMap.put(&quot;database.driver&quot;,&quot;org.postgresql.Driver&quot;);
			globalMap.put(&quot;database.url&quot;,&quot;jdbc:postgresql://localhost:5432/mirth&quot;);
			globalMap.put(&quot;database.username&quot;,&quot;mirthadmin&quot;);
			globalMap.put(&quot;database.password&quot;,&quot;changeme&quot;);
			globalMap.put(&quot;database.date.function&quot;,&quot;now()&quot;);

			
			// ####### START VARIABLES REQUIRED FOR SUITE AND NOT CONFIGURABLE ######
			//request message status
			globalMap.put("request.message.status.open","OPEN");
			globalMap.put("request.message.status.inprocess","IN_PROCESS");
			globalMap.put("request.message.status.processed","PROCESSED");
			globalMap.put("request.message.status.responsereturned","RESPONSE_RETURNED");
			//target details - name
			globalMap.put("target.detail.code.caaers","caAERS");
			globalMap.put("target.detail.code.psc","PSC");
			globalMap.put("target.detail.code.ctom","CTOM");
			globalMap.put("target.detail.code.c3pr","C3PR");
			globalMap.put("target.detail.code.delegation","DELEGATION");

			//target response status
			globalMap.put("target.response.status.successful","SUCCESSFUL");
			globalMap.put("target.response.status.fault","FAULT");
			globalMap.put("target.response.status.timeout","TIMEOUT");
			//overall response status
			globalMap.put("overall.response.status.success","SUCCESS");
			globalMap.put("overall.response.status.failure","FAILURE");

			/*
			var coppaPersonStrategy = new Packages.gov.nih.nci.ihub.writer.ncies.core.CoppaInvocationStrategy();
			coppaPersonStrategy.setServiceUrl(globalMap.get(&quot;coppa.person.url&quot;));
			coppaPersonStrategy.setGridClientClassName(&quot;gov.nih.nci.coppa.services.entities.person.client.PersonClient&quot;);
			coppaPersonStrategy.init();
			globalMap.put(&quot;coppaPersonStrategy&quot;, coppaPersonStrategy);
			*/
			// ######## END VARIABLES REQUIRED FOR SUITE AND NOT CONFIGURABLE ########

			return;
	   </string>
  </entry>
</map>