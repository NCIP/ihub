<com.webreach.mirth.model.Channel>
  <id>2b004b5c-1422-4b80-a59d-43c755974428</id>
  <name>HL7v2 to HL7v3 Truncated</name>
  <description></description>
  <enabled>true</enabled>
  <version>1.8.2</version>
  <lastModified>
    <time>1287147536250</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>3</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="binary">0</property>
      <property name="fileFilter">*</property>
      <property name="password">anonymous</property>
      <property name="regex">0</property>
      <property name="username">anonymous</property>
      <property name="moveToDirectory">C:/projects_svn/ihub-mirth/trunk/software/smoke-test/ca-adapter/hl7-v2-to-v3/Hl7v2-Processed</property>
      <property name="moveToErrorDirectory">C:/projects_svn/ihub-mirth/trunk/software/smoke-test/ca-adapter/hl7-v2-to-v3/Hl7v2-Error</property>
      <property name="pollingType">interval</property>
      <property name="charsetEncoding">DEFAULT_ENCODING</property>
      <property name="scheme">file</property>
      <property name="host">C:/projects_svn/ihub-mirth/trunk/software/smoke-test/ca-adapter/hl7-v2-to-v3/HL7v2-Open</property>
      <property name="secure">1</property>
      <property name="pollingFrequency">2000</property>
      <property name="validateConnections">1</property>
      <property name="DataType">File Reader</property>
      <property name="processBatchFiles">0</property>
      <property name="checkFileAge">0</property>
      <property name="passive">1</property>
      <property name="fileAge">0</property>
      <property name="sortAttribute">date</property>
      <property name="FTPAnonymous">1</property>
      <property name="moveToPattern">HL7v2-processed-${SYSTIME}.txt</property>
      <property name="autoDelete">0</property>
    </properties>
    <transformer>
      <steps/>
      <inboundTemplate></inboundTemplate>
      <outboundTemplate></outboundTemplate>
      <inboundProtocol>HL7V2</inboundProtocol>
      <outboundProtocol>HL7V2</outboundProtocol>
      <inboundProperties/>
      <outboundProperties>
        <property name="handleRepetitions">false</property>
        <property name="stripNamespaces">true</property>
        <property name="convertLFtoCR">true</property>
        <property name="useStrictValidation">false</property>
        <property name="useStrictParser">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
  </sourceConnector>
  <destinationConnectors>
    <com.webreach.mirth.model.Connector>
      <name>HL7v3 File Writer</name>
      <properties>
        <property name="secure">1</property>
        <property name="scheme">file</property>
        <property name="binary">0</property>
        <property name="username">anonymous</property>
        <property name="outputPattern">HL7v3-converted-${UUID}.xml</property>
        <property name="validateConnections">1</property>
        <property name="DataType">File Writer</property>
        <property name="FTPAnonymous">1</property>
        <property name="charsetEncoding">DEFAULT_ENCODING</property>
        <property name="password">anonymous</property>
        <property name="passive">1</property>
        <property name="template">${message.encodedData}</property>
        <property name="outputAppend">1</property>
        <property name="host">C:/projects_svn/ihub-mirth/trunk/software/smoke-test/ca-adapter/hl7-v2-to-v3/HL7v3-Converted</property>
      </properties>
      <transformer>
        <steps>
          <com.webreach.mirth.model.Step>
            <sequenceNumber>0</sequenceNumber>
            <name>Loop Over OBX</name>
            <script>for each (seg in msg.children()) {
	
	if (seg.name().toString() == &quot;OBR&quot;) {

		// Here you still have access to the message_control_id variable set in the 
		// first transformer step.  Can be referenced by $(&apos;message_control_id&apos;)
                // and can grab data from the OBR and save in variables for use when
                // you hit an OBX segment below.
               
		var obr_set_id = seg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;].toString();
		var obr_filler_order_number = seg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString();
	}

	if (seg.name().toString() == &quot;OBX&quot;) {

		// Here you still have access to the message_control_id variable set in the
		// first transformer step. Can be referenced by $(&apos;message_control_id&apos;)

		// Also have access to any variable you set from the OBR segment that 
		// immediately preceded this OBX.  obr_set_id, obr_filler_order_number, etc...

		var obx_set_id = seg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString();
		var obx_value_type = seg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString();

	}
}</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>for each (seg in msg.children()) {
	
	if (seg.name().toString() == &quot;OBR&quot;) {

		// Here you still have access to the message_control_id variable set in the 
		// first transformer step.  Can be referenced by $(&apos;message_control_id&apos;)
                // and can grab data from the OBR and save in variables for use when
                // you hit an OBX segment below.
               
		var obr_set_id = seg[&apos;OBR.1&apos;][&apos;OBR.1.1&apos;].toString();
		var obr_filler_order_number = seg[&apos;OBR.3&apos;][&apos;OBR.3.1&apos;].toString();
	}

	if (seg.name().toString() == &quot;OBX&quot;) {

		// Here you still have access to the message_control_id variable set in the
		// first transformer step. Can be referenced by $(&apos;message_control_id&apos;)

		// Also have access to any variable you set from the OBR segment that 
		// immediately preceded this OBX.  obr_set_id, obr_filler_order_number, etc...

		var obx_set_id = seg[&apos;OBX.1&apos;][&apos;OBX.1.1&apos;].toString();
		var obx_value_type = seg[&apos;OBX.2&apos;][&apos;OBX.2.1&apos;].toString();

	}
}</string>
              </entry>
            </data>
          </com.webreach.mirth.model.Step>
        </steps>
        <inboundTemplate>MSH|^~\&amp;|FLEXILAB|S|PHAMIS||20100922044103||ORU^R01|102650001697|P|2.1|||
PID|||1111111^^^^1||PATIENT^TEST||19990909|F||||||||||1212121212|||||||||||
PV1|||AROOM^AWARD^SOMEBED|||||||||||||||||||||||||||||||||||||||||||||||
OBR||11122223333|11122223333|BMET^BASIC METABOLIC PANL^^^|||20100922040000|||||||20100922041700||59591||||W316||20100922044102||CH|F||^^^20100922040000^^R|^^||||||||20100922040000|
OBX|1|ST|NA^SODIUM^FLEXILAB|1|149|mmol/L|(136-145)|H|||F|||||
OBX|2|ST|K^POTASSIUM^FLEXILAB|1|4.2|mmol/L|(3.6-5.1)||||F|||||
OBX|3|ST|CL^CHLORIDE^FLEXILAB|1|113|mmol/L|(101-111)|H|||F|||||
OBX|4|ST|CO2^CARBON DIOXIDE^FLEXILAB|1|28|mmol/L|(22-32)||||F|||||
OBX|5|ST|AG^ANION GAP^FLEXILAB|1|8|mmol/L|(4-15)||||F|||||
OBX|6|ST|GLUC^GLUCOSE TIMED/RANDOM^FLEXILAB|1|162|mg/dL|(70-125)|H|||F|||||
OBX|7|ST|BUN^UREA NITROGEN^FLEXILAB|1|32|mg/dL|(6-20)|H|||F|||||
OBX|8|ST|CREA^CREATININE^FLEXILAB|1|1.41|mg/dL|(0.64-1.27)|H|||F|||||
OBX|9|ST|BUCR^BUN/CREATININE RATIO^FLEXILAB|1|22.7|mgUN/mgCR|(10.0-20.0)|H|||F|||||
OBX|10|ST|OSMC^OSMOLALITY / CALC^FLEXILAB|1|307|mOsm/kg|(275-295)|H|||F|||||
OBX|11|ST|CA^CALCIUM^FLEXILAB|1|9.1|mg/dL|(8.9-10.3)||||F|||||
OBX|12|ST|GFR^GFR/NON AFRICAN AMERICAN^FLEXILAB|1|51||(&gt;59)|L|||F|||||
NTE||L|Units: mL/min/1.73 m2|||L|||F|||||
OBX|13|ST|GFRB^GFR/AFRICAN AMERICAN^FLEXILAB|1|&gt;60||(&gt;59)||||F|||||
NTE||L|Units: mL/min/1.73 m2||||||F|||||
</inboundTemplate>
        <outboundTemplate>3.29.456.4.978385.45,3.29.456.4.978385.45,3.29.456.4.978385.45,3.29.456.4.978385.45,3.29.456.4.978385.45,3.29.456.4.978385.45,3.29.456.4.978385.45,NB001,1,1,8-May-06,8-May-06,1145,1145,1234567,MONOCYTES_ABS,MONO #,0.4,,0-0.8,Thousand/mm3,dd-MMM-yy,placeholder,NCI,placeholder,placeholder,placeholder,placeholder,C3D</outboundTemplate>
        <inboundProtocol>HL7V2</inboundProtocol>
        <outboundProtocol>DELIMITED</outboundProtocol>
        <inboundProperties>
          <property name="handleRepetitions">false</property>
          <property name="stripNamespaces">true</property>
          <property name="convertLFtoCR">true</property>
          <property name="useStrictValidation">false</property>
          <property name="useStrictParser">false</property>
        </inboundProperties>
        <outboundProperties/>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
    </com.webreach.mirth.model.Connector>
  </destinationConnectors>
  <properties>
    <property name="initialState">started</property>
    <property name="synchronous">true</property>
    <property name="store_messages">true</property>
    <property name="encryptData">false</property>
    <property name="transactional">false</property>
    <property name="max_message_age">-1</property>
    <property name="dont_store_filtered">false</property>
    <property name="error_messages_only">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the mule engine is started
// You only have access to the globalMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the mule engine is stopped
// You only have access to the globalMap here to persist data
return;</shutdownScript>
</com.webreach.mirth.model.Channel>