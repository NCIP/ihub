<channel>
  <id>aa4f79b7-1c6e-481d-b45d-8eebbb10dd52</id>
  <name>TranscendInboundChannel</name>
  <description>Inbound channel for all trim messages from Transcend.&#xd;
1) Validates username and password&#xd;
2) Transforms standard MC http message xml to integration flow inbound message format&#xd;
3) Filters and routes message to the integration flow</description>
  <enabled>true</enabled>
  <version>2.1.1.5490</version>
  <lastModified>
    <time>1338818473622</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>8</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Web Service Listener</property>
      <property name="host">0.0.0.0</property>
      <property name="port">12090</property>
      <property name="receiverClassName">gov.nih.nci.caxchange.transcend.CaXchangeRequestService</property>
      <property name="receiverPasswords">&lt;list/&gt;</property>
      <property name="receiverResponseValue">ResponseWriterConnector</property>
      <property name="receiverServiceName">CaXchangeRequestService</property>
      <property name="receiverUsernames">&lt;list/&gt;</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>extractMessage</name>
          <script>/*
var nonencodedMsgContent = Packages.java.net.URLDecoder.decode(msg[&apos;Content&apos;].toString());
//var nonencodedMsgContent = msg[&apos;Content&apos;].toString();

msg[&apos;Content&apos;] = new XML(&apos;&lt;Content&gt;&apos; + nonencodedMsgContent + &apos;&lt;/Content&gt;&apos;);
*/
channelMap.put(&apos;requestMessage&apos;, msg);
//may have to drop this step</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>/*
var nonencodedMsgContent = Packages.java.net.URLDecoder.decode(msg[&apos;Content&apos;].toString());
//var nonencodedMsgContent = msg[&apos;Content&apos;].toString();

msg[&apos;Content&apos;] = new XML(&apos;&lt;Content&gt;&apos; + nonencodedMsgContent + &apos;&lt;/Content&gt;&apos;);
*/
channelMap.put(&apos;requestMessage&apos;, msg);
//may have to drop this step</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>transformToCaCISRequest</name>
          <script>var cacisRequest = null;
try {
	var cacisRequestStr = transformMessage(msg, &quot;inboundMsgToCRTransformer&quot;);

	cacisRequest = new XML(cacisRequestStr);

	channelMap.put(&quot;cacisRequest&quot;, cacisRequest);

} catch(err) {
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1041, err, err.message);
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>var cacisRequest = null;
try {
	var cacisRequestStr = transformMessage(msg, &quot;inboundMsgToCRTransformer&quot;);

	cacisRequest = new XML(cacisRequestStr);

	channelMap.put(&quot;cacisRequest&quot;, cacisRequest);

} catch(err) {
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1041, err, err.message);
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>setCaCISRequestToMsg</name>
          <script>msg=$(&apos;cacisRequest&apos;);

logger.info(&quot;Message = &quot; + msg );

default xml namespace = &apos;http://cacis.nci.nih.gov&apos;;

var srcDt = msg[&apos;sourceData&apos;];

default xml namespace = &apos;http://caXchange.nci.nih.gov/caxchangerequest&apos;;

var xChngReq = srcDt[&apos;caxchangerequest&apos;];

default xml namespace = &apos;http://caXchange.nci.nih.gov/messaging&apos;;

var msgTyp = xChngReq[&apos;metadata&apos;][&apos;operationName&apos;].toString();
channelMap.put(&apos;msgTyp&apos;,msgTyp);
logger.info(&quot;Message Type = &quot; + channelMap.get(&apos;msgTyp&apos;) );

var referenceMessageId = xChngReq[&apos;metadata&apos;][&apos;caXchangeIdentifier&apos;].toString()
channelMap.put(&apos;referenceMessageId&apos;,referenceMessageId);
logger.info(&quot;referenceMessage Id = &quot; + channelMap.get(&apos;referenceMessageId&apos;) );</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>msg=$(&apos;cacisRequest&apos;);

logger.info(&quot;Message = &quot; + msg );

default xml namespace = &apos;http://cacis.nci.nih.gov&apos;;

var srcDt = msg[&apos;sourceData&apos;];

default xml namespace = &apos;http://caXchange.nci.nih.gov/caxchangerequest&apos;;

var xChngReq = srcDt[&apos;caxchangerequest&apos;];

default xml namespace = &apos;http://caXchange.nci.nih.gov/messaging&apos;;

var msgTyp = xChngReq[&apos;metadata&apos;][&apos;operationName&apos;].toString();
channelMap.put(&apos;msgTyp&apos;,msgTyp);
logger.info(&quot;Message Type = &quot; + channelMap.get(&apos;msgTyp&apos;) );

var referenceMessageId = xChngReq[&apos;metadata&apos;][&apos;caXchangeIdentifier&apos;].toString()
channelMap.put(&apos;referenceMessageId&apos;,referenceMessageId);
logger.info(&quot;referenceMessage Id = &quot; + channelMap.get(&apos;referenceMessageId&apos;) );</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">PGNhQ0lTUmVxdWVzdCB4bWxucz0iaHR0cDovL2NhY2lzLm5jaS5uaWguZ292IiB4bWxuczptZXM9
Imh0dHA6Ly9jYVhjaGFuZ2UubmNpLm5paC5nb3YvbWVzc2FnaW5nIiB4bWxuczpuczF0cmltPSJ1
cm46dG9sdmVuLW9yZzp0cmltOjQuMCIgeG1sbnM6Y2RhPSJ1cm46aGw3LW9yZzp2MyIgeG1sbnM6
eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+Cgk8c291cmNl
RGF0YT4KCQk8bWVzOmNhWGNoYW5nZVJlcXVlc3RNZXNzYWdlPgoJCQk8bWVzOm1ldGFkYXRhPgoJ
CQkJPG1lczp0cmFuc2FjdGlvbkNvbnRyb2w+PzwvbWVzOnRyYW5zYWN0aW9uQ29udHJvbD4KCQkJ
CTxtZXM6c2VydmljZVR5cGU+aUh1YjwvbWVzOnNlcnZpY2VUeXBlPgoJCQkJPCEtLU9wdGlvbmFs
Oi0tPgoJCQkJPG1lczpvcGVyYXRpb25OYW1lPlJFR0lTVFJBVElPTjwvbWVzOm9wZXJhdGlvbk5h
bWU+CgkJCQk8bWVzOmV4dGVybmFsSWRlbnRpZmllcj4zNDU2Nzg3OTwvbWVzOmV4dGVybmFsSWRl
bnRpZmllcj4KCQkJCTwhLS1PcHRpb25hbDotLT4KCQkJCTxtZXM6Y2FYY2hhbmdlSWRlbnRpZmll
cj4yMzQ1Njc8L21lczpjYVhjaGFuZ2VJZGVudGlmaWVyPgoJCQkJPCEtLU9wdGlvbmFsOi0tPgoJ
CQkJPG1lczpjcmVkZW50aWFscz4KCQkJCQk8IS0tWW91IGhhdmUgYSBDSE9JQ0Ugb2YgdGhlIG5l
eHQgMyBpdGVtcyBhdCB0aGlzIGxldmVsLS0+CgkJCQkJPG1lczp1c2VyTmFtZT50b2x2ZW51c2Vy
PC9tZXM6dXNlck5hbWU+CgkJCQkJPG1lczpncm91cE5hbWU+bm9ncmlkPC9tZXM6Z3JvdXBOYW1l
PgoJCQkJCTxtZXM6Z3JpZElkZW50aWZpZXI+bm9ncmlkPC9tZXM6Z3JpZElkZW50aWZpZXI+CgkJ
CQkJPCEtLU9wdGlvbmFsOi0tPgoJCQkJCTxtZXM6cGFzc3dvcmQ+Y2hhbmdlbWU8L21lczpwYXNz
d29yZD4KCQkJCQk8IS0tT3B0aW9uYWw6LS0+CgkJCQkJPG1lczpkZWxlZ2F0ZWRDcmVkZW50aWFs
UmVmZXJlbmNlPm5vY3JlZGVudGlhbHM8L21lczpkZWxlZ2F0ZWRDcmVkZW50aWFsUmVmZXJlbmNl
PgoJCQkJPC9tZXM6Y3JlZGVudGlhbHM+CgkJCTwvbWVzOm1ldGFkYXRhPgoJCQk8bWVzOnJlcXVl
c3Q+CgkJCQk8bWVzOmJ1c2luZXNzTWVzc2FnZVBheWxvYWQ+CgkJCQkJPG1lczp4bWxTY2hlbWFE
ZWZpbml0aW9uPnVybjp0b2x2ZW4tb3JnOnRyaW06NC4wPC9tZXM6eG1sU2NoZW1hRGVmaW5pdGlv
bj4KCQkJCQk8bnMxdHJpbTp0cmltPgoJCQkJCQk8bnMxdHJpbTpleHRlbmRzPnBhdGllbnRBY3Q8
L25zMXRyaW06ZXh0ZW5kcz4KCQkJCQkJPG5zMXRyaW06bmFtZT5vYnMvZXZuL3JlZ2lzdHJhdGlv
bjwvbnMxdHJpbTpuYW1lPgoJCQkJCQk8bnMxdHJpbTpkZXNjcmlwdGlvbj5SZWdpc3RyYXRpb248
L25zMXRyaW06ZGVzY3JpcHRpb24+CgkJCQkJCTxuczF0cmltOnBhZ2U+cmVnaXN0cmF0aW9uLnho
dG1sPC9uczF0cmltOnBhZ2U+CgkJCQkJCTxuczF0cmltOmRyaWxsZG93bj5yZWdpc3RyYXRpb25E
RC54aHRtbDwvbnMxdHJpbTpkcmlsbGRvd24+CgkJCQkJCTxuczF0cmltOm1lbnU+Z2xvYmFsOmNh
c2VSZXBvcnRGb3JtTWVudTwvbnMxdHJpbTptZW51PgoJCQkJCQk8bnMxdHJpbTp0b2x2ZW5FdmVu
dElkIGFjY291bnRJZD0iNDcwMDMiIGFwcGxpY2F0aW9uPSJlY2hyIiBpZD0iMjY3MjIyNCIgcGF0
aD0iZWNocjpwYXRpZW50LTIwMDMwMTQ6Y2FzZVJlcG9ydEZvcm0tMjY3MjIyNCIgcHJpbmNpcGFs
PSJzYXJhaC5kYXZpc0B1Y3NmbWVkY3RyLm9yZyIgdGltZXN0YW1wPSIyMDEyMDMwODIxMzEyMSsw
MDAwIi8+CgkJCQkJCTxuczF0cmltOnJlZmVyZW5jZT5odHRwOi8vd2lraWhpdC5vcmcvd2lraS9p
bmRleC5waHA8L25zMXRyaW06cmVmZXJlbmNlPgoJCQkJCQk8bnMxdHJpbTphcHBsaWNhdGlvbiBu
YW1lPSJlY2hyIiBzaWduYXR1cmVSZXF1aXJlZD0idHJ1ZSI+CgkJCQkJCQk8bnMxdHJpbTppbnN0
YW5jZT5lY2hyOnBhdGllbnQ6Y2FzZVJlcG9ydEZvcm08L25zMXRyaW06aW5zdGFuY2U+CgkJCQkJ
CQk8bnMxdHJpbTp3aXA+ZWNocjphY3Rpdml0eTphbGw8L25zMXRyaW06d2lwPgoJCQkJCQk8L25z
MXRyaW06YXBwbGljYXRpb24+CgkJCQkJCTxuczF0cmltOmFjdCBjbGFzc0NvZGU9Ik9CUyIgbW9v
ZENvZGU9IkVWTiI+CgkJCQkJCQk8bnMxdHJpbTpsYWJlbD5SZWdpc3RyYXRpb248L25zMXRyaW06
bGFiZWw+CgkJCQkJCQk8bnMxdHJpbTpiaW5kIGFwcGxpY2F0aW9uPSJlY2hyIiBwaGFzZT0iY3Jl
YXRlIj4KCQkJCQkJCQk8bnMxdHJpbTpwbGFjZWhvbGRlciBiaW5kQWN0aW9uPSJtZXJnZSI+CgkJ
CQkJCQkJCTxuczF0cmltOnBhdGg+ZWNocjpwYXRpZW50OmNhc2VSZXBvcnRGb3JtPC9uczF0cmlt
OnBhdGg+CgkJCQkJCQkJPC9uczF0cmltOnBsYWNlaG9sZGVyPgoJCQkJCQkJPC9uczF0cmltOmJp
bmQ+CgkJCQkJCQk8bnMxdHJpbTppZD4KCQkJCQkJCQk8bnMxdHJpbTpJST4KCQkJCQkJCQkJPG5z
MXRyaW06cm9vdD4xLjIuMS40NzAwMzwvbnMxdHJpbTpyb290PgoJCQkJCQkJCQk8bnMxdHJpbTpl
eHRlbnNpb24+ZWNocjpwYXRpZW50LTIwMDMwMTQ6Y2FzZVJlcG9ydEZvcm0tMjY3MjIyMTwvbnMx
dHJpbTpleHRlbnNpb24+CgkJCQkJCQkJPC9uczF0cmltOklJPgoJCQkJCQkJPC9uczF0cmltOmlk
PgoJCQkJCQkJPG5zMXRyaW06Y29kZT4KCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJPG5z
MXRyaW06Y29kZT5PSU5UPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0
ZW1OYW1lPkhMNzwvbnMxdHJpbTpjb2RlU3lzdGVtTmFtZT4KCQkJCQkJCQkJPG5zMXRyaW06Y29k
ZVN5c3RlbVZlcnNpb24+My4wPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCTwv
bnMxdHJpbTpDRD4KCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJPG5zMXRyaW06c3RhdHVz
Q29kZT5hY3RpdmU8L25zMXRyaW06c3RhdHVzQ29kZT4KCQkJCQkJCTxuczF0cmltOnRpdGxlPgoJ
CQkJCQkJCTxuczF0cmltOlNUPlJlZ2lzdHJhdGlvbjwvbnMxdHJpbTpTVD4KCQkJCQkJCTwvbnMx
dHJpbTp0aXRsZT4KCQkJCQkJCTxuczF0cmltOmVmZmVjdGl2ZVRpbWU+CgkJCQkJCQkJPG5zMXRy
aW06bGFiZWw+RGF0ZTwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQk8bnMxdHJpbTpuZXcgZGF0YXR5
cGU9IlRTIiBmdW5jdGlvbj0ibm93Ii8+CgkJCQkJCQkJPG5zMXRyaW06VFM+CgkJCQkJCQkJCTxu
czF0cmltOnZhbHVlPjIwMTIwMzA4MTMzMTIxLTA4MDA8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJ
PC9uczF0cmltOlRTPgoJCQkJCQkJPC9uczF0cmltOmVmZmVjdGl2ZVRpbWU+CgkJCQkJCQk8bnMx
dHJpbTpwYXJ0aWNpcGF0aW9uIG5hbWU9InN1YmplY3QiIHR5cGVDb2RlPSJTQkoiPgoJCQkJCQkJ
CTxuczF0cmltOnJvbGUgY2xhc3NDb2RlPSJQQVQiPgoJCQkJCQkJCQk8bnMxdHJpbTpiaW5kIGFw
cGxpY2F0aW9uPSJlY2hyIj4KCQkJCQkJCQkJCTxuczF0cmltOnBsYWNlaG9sZGVyPgoJCQkJCQkJ
CQkJCTxuczF0cmltOnBhdGg+ZWNocjpwYXRpZW50PC9uczF0cmltOnBhdGg+CgkJCQkJCQkJCQk8
L25zMXRyaW06cGxhY2Vob2xkZXI+CgkJCQkJCQkJCTwvbnMxdHJpbTpiaW5kPgoJCQkJCQkJCQk8
bnMxdHJpbTpiaW5kIGFwcGxpY2F0aW9uPSJlcGhyIj4KCQkJCQkJCQkJCTxuczF0cmltOnBsYWNl
aG9sZGVyPgoJCQkJCQkJCQkJCTxuczF0cmltOnBhdGg+ZXBocjpwYXRpZW50PC9uczF0cmltOnBh
dGg+CgkJCQkJCQkJCQk8L25zMXRyaW06cGxhY2Vob2xkZXI+CgkJCQkJCQkJCTwvbnMxdHJpbTpi
aW5kPgoJCQkJCQkJCQk8bnMxdHJpbTppZD4KCQkJCQkJCQkJCTxuczF0cmltOklJPgoJCQkJCQkJ
CQkJCTxuczF0cmltOnJvb3Q+MS4yLjEuNDcwMDM8L25zMXRyaW06cm9vdD4KCQkJCQkJCQkJCQk8
bnMxdHJpbTpleHRlbnNpb24+ZWNocjpwYXRpZW50LTIwMDMwMTQ8L25zMXRyaW06ZXh0ZW5zaW9u
PgoJCQkJCQkJCQkJPC9uczF0cmltOklJPgoJCQkJCQkJCQk8L25zMXRyaW06aWQ+CgkJCQkJCQkJ
CTxuczF0cmltOnBsYXllciBjbGFzc0NvZGU9IlBTTiIgZGV0ZXJtaW5lckNvZGU9IklOU1RBTkNF
Ij4KCQkJCQkJCQkJCTxuczF0cmltOm5hbWU+CgkJCQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+UGF0
aWVudCBOYW1lPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOkVOPgoJCQkJCQkJ
CQkJCQk8bnMxdHJpbTpsYWJlbD5MZWdhbCBOYW1lPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJ
CQk8bnMxdHJpbTp1c2U+TDwvbnMxdHJpbTp1c2U+CgkJCQkJCQkJCQkJCTxuczF0cmltOnBhcnQ+
CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJlbD5GaXJzdCBOYW1lPC9uczF0cmltOmxhYmVsPgoJ
CQkJCQkJCQkJCQkJPG5zMXRyaW06dHlwZT5HSVY8L25zMXRyaW06dHlwZT4KCQkJCQkJCQkJCQkJ
CTxuczF0cmltOlNUPkNoZXJyeTwvbnMxdHJpbTpTVD4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnBh
cnQ+CgkJCQkJCQkJCQkJCTxuczF0cmltOnBhcnQ+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJl
bD5NaWRkbGUgTmFtZTwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQkJCTxuczF0cmltOnR5cGU+
R0lWPC9uczF0cmltOnR5cGU+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpTVC8+CgkJCQkJCQkJCQkJ
CTwvbnMxdHJpbTpwYXJ0PgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpwYXJ0PgoJCQkJCQkJCQkJCQkJ
PG5zMXRyaW06bGFiZWw+TGFzdCBOYW1lPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5z
MXRyaW06dHlwZT5GQU08L25zMXRyaW06dHlwZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOlNUPkJs
b3Nzb208L25zMXRyaW06U1Q+CgkJCQkJCQkJCQkJCTwvbnMxdHJpbTpwYXJ0PgoJCQkJCQkJCQkJ
CTwvbnMxdHJpbTpFTj4KCQkJCQkJCQkJCTwvbnMxdHJpbTpuYW1lPgoJCQkJCQkJCQk8L25zMXRy
aW06cGxheWVyPgoJCQkJCQkJCTwvbnMxdHJpbTpyb2xlPgoJCQkJCQkJPC9uczF0cmltOnBhcnRp
Y2lwYXRpb24+CgkJCQkJCQk8bnMxdHJpbTpwYXJ0aWNpcGF0aW9uIG5hbWU9ImRhdGFFbnRlcmVy
IiB0eXBlQ29kZT0iRU5UIj4KCQkJCQkJCQk8bnMxdHJpbTpyb2xlIGNsYXNzQ29kZT0iUk9MIj4K
CQkJCQkJCQkJPG5zMXRyaW06aWQ+CgkJCQkJCQkJCQk8bnMxdHJpbTpJST4KCQkJCQkJCQkJCQk8
bnMxdHJpbTpyb290PjEuMi4xLjQ3MDAzPC9uczF0cmltOnJvb3Q+CgkJCQkJCQkJCQkJPG5zMXRy
aW06ZXh0ZW5zaW9uPnNhcmFoLmRhdmlzQHVjc2ZtZWRjdHIub3JnPC9uczF0cmltOmV4dGVuc2lv
bj4KCQkJCQkJCQkJCTwvbnMxdHJpbTpJST4KCQkJCQkJCQkJPC9uczF0cmltOmlkPgoJCQkJCQkJ
CTwvbnMxdHJpbTpyb2xlPgoJCQkJCQkJPC9uczF0cmltOnBhcnRpY2lwYXRpb24+CgkJCQkJCQk8
bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIgZW5hYmxlZD0idHJ1ZSIgbmFtZT0i
UmFuZG9tUGF0aWVudElEIiB0eXBlQ29kZT0iTkFNRSI+CgkJCQkJCQkJPG5zMXRyaW06YWN0IGNs
YXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJPG5zMXRyaW06YmluZCBhcHBs
aWNhdGlvbj0iZWNociIgcGhhc2U9ImNyZWF0ZSI+CgkJCQkJCQkJCQk8bnMxdHJpbTpwbGFjZWhv
bGRlciBiaW5kQWN0aW9uPSJjcmVhdGUiPgoJCQkJCQkJCQkJCTxuczF0cmltOnBhdGg+ZWNocjpw
YXRpZW50OnRyaWFsPC9uczF0cmltOnBhdGg+CgkJCQkJCQkJCQk8L25zMXRyaW06cGxhY2Vob2xk
ZXI+CgkJCQkJCQkJCTwvbnMxdHJpbTpiaW5kPgoJCQkJCQkJCQk8bnMxdHJpbTppZD4KCQkJCQkJ
CQkJCTxuczF0cmltOklJPgoJCQkJCQkJCQkJCTxuczF0cmltOnJvb3Q+MS4yLjEuNDcwMDM8L25z
MXRyaW06cm9vdD4KCQkJCQkJCQkJCQk8bnMxdHJpbTpleHRlbnNpb24+ZWNocjpwYXRpZW50LTIw
MDMwMTQ6dHJpYWwtMjY3MjIyMjwvbnMxdHJpbTpleHRlbnNpb24+CgkJCQkJCQkJCQk8L25zMXRy
aW06SUk+CgkJCQkJCQkJCTwvbnMxdHJpbTppZD4KCQkJCQkJCQkJPG5zMXRyaW06dGl0bGU+CgkJ
CQkJCQkJCQk8bnMxdHJpbTpTVD5JLVNQWSAyIFN1YmplY3QgSUQ8L25zMXRyaW06U1Q+CgkJCQkJ
CQkJCTwvbnMxdHJpbTp0aXRsZT4KCQkJCQkJCQkJPG5zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJ
CQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJlbD5QYXRpZW50IElE
PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOlNUPjQ5ODY0PC9uczF0cmltOlNU
PgoJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWU+CgkJ
CQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+U3R1ZHkgSUQ8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJ
CQkJPG5zMXRyaW06U1Q+Q1AtMDE8L25zMXRyaW06U1Q+CgkJCQkJCQkJCQkJPCEtLTxuczF0cmlt
OlNUPkktU1BZIDIgVFJJQUw8L25zMXRyaW06U1Q+LS0+PC9uczF0cmltOnZhbHVlPgoJCQkJCQkJ
CQkJPG5zMXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+UGF0aWVudCBOYW1l
PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOlNUPjIwMDMwMTQ8L25zMXRyaW06
U1Q+CgkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCTwvbnMxdHJpbTpvYnNlcnZh
dGlvbj4KCQkJCQkJCQk8L25zMXRyaW06YWN0PgoJCQkJCQkJPC9uczF0cmltOnJlbGF0aW9uc2hp
cD4KCQkJCQkJCTxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249IklOIiBuYW1lPSJwYXRp
ZW50TmFtZSIgdHlwZUNvZGU9Ik5BTUUiPgoJCQkJCQkJCTxuczF0cmltOmFjdCBjbGFzc0NvZGU9
IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJPG5zMXRyaW06dGl0bGU+CgkJCQkJCQkJ
CQk8bnMxdHJpbTpTVD5QYXRpZW50IE5hbWU8L25zMXRyaW06U1Q+CgkJCQkJCQkJCTwvbnMxdHJp
bTp0aXRsZT4KCQkJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRpcmVjdGlvbj0iSU4iIGVu
YWJsZWQ9ImZhbHNlIiBuYW1lPSJmaXJzdE5hbWUiIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJCQkJ
CTxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJ
CQk8bnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGU+MTg0MDk1MDA5PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQk8bnMxdHJp
bTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJ
CQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNv
ZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFu
dWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRy
aW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06
Y29kZT4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgz
LjMuMjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVT
eXN0ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4K
CQkJCQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmlt
OkNEPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCTxuczF0cmltOm9ic2Vy
dmF0aW9uPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmxhYmVsPkZpcnN0PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06U1Q+Q2hl
cnJ5PC9uczF0cmltOlNUPgoJCQkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJ
PC9uczF0cmltOm9ic2VydmF0aW9uPgoJCQkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJCQkJCQkJ
PC9uczF0cmltOnJlbGF0aW9uc2hpcD4KCQkJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRp
cmVjdGlvbj0iSU4iIG5hbWU9Im1pZGRsZU5hbWUiIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJCQkJ
CTxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJ
CQk8bnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGU+NDA1NjIyMDA2PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQk8bnMxdHJp
bTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJ
CQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNv
ZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFu
dWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRy
aW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06
Y29kZT4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgz
LjMuMjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVT
eXN0ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4K
CQkJCQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmlt
OkNEPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCTxuczF0cmltOm9ic2Vy
dmF0aW9uPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmxhYmVsPk1pZGRsZTwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQkJCTxuczF0cmltOlNULz4K
CQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpvYnNlcnZh
dGlvbj4KCQkJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJCQkJCTwvbnMxdHJpbTpyZWxhdGlv
bnNoaXA+CgkJCQkJCQkJCTxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249IklOIiBlbmFi
bGVkPSJmYWxzZSIgbmFtZT0ibGFzdE5hbWUiIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJCQkJCTxu
czF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJCQk8
bnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJCTxuczF0
cmltOmNvZGU+Mzk3Njc4MDA4PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpj
b2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJ
CQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNvZGVT
eXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFudWFy
eSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06
dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06Y29k
ZT4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjMu
MjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0
ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJCTxuczF0
cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJ
CQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmltOkNE
PgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCTxuczF0cmltOm9ic2VydmF0
aW9uPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmxh
YmVsPkxhc3Q8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpTVD5CbG9zc29t
PC9uczF0cmltOlNUPgoJCQkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJPC9u
czF0cmltOm9ic2VydmF0aW9uPgoJCQkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJCQkJCQkJPC9u
czF0cmltOnJlbGF0aW9uc2hpcD4KCQkJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRpcmVj
dGlvbj0iSU4iIGVuYWJsZWQ9ImZhbHNlIiBuYW1lPSJpbml0aWFscyIgdHlwZUNvZGU9Ik5BTUUi
PgoJCQkJCQkJCQkJPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iRU5UUlkiIG1vb2RDb2RlPSJFVk4i
PgoJCQkJCQkJCQkJCTxuczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCTxuczF0cmltOkNEPgoJCQkJ
CQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVTeXN0
ZW0+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRy
aW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lv
bj5KYW51YXJ5IDIwMDk8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQkJCQkJCQk8
bnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDwvbnMx
dHJpbTpjb2RlPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4x
MTM4ODMuMy4yNi4yPC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06
Y29kZVN5c3RlbU5hbWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJz
aW9uPgoJCQkJCQkJCQkJCQkJPC9uczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCQk8L25z
MXRyaW06Q0Q+CgkJCQkJCQkJCQkJPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJPG5zMXRyaW06
b2JzZXJ2YXRpb24+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCQkJPG5z
MXRyaW06bGFiZWw+SW5pdGlhbHM8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJCQk8bnMxdHJp
bTpTVD5DQjwvbnMxdHJpbTpTVD4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJ
CQkJCTwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJ
CQkJCTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJCQkJ
CTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGly
ZWN0aW9uPSJJTiIgZW5hYmxlZD0idHJ1ZSIgbmFtZT0ib3RoZXJJbmZvIiB0eXBlQ29kZT0iTkFN
RSI+CgkJCQkJCQkJPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iRU5UUlkiIG1vb2RDb2RlPSJFVk4i
PgoJCQkJCQkJCQk8bnMxdHJpbTp0aXRsZT4KCQkJCQkJCQkJCTxuczF0cmltOlNUPk90aGVyIElu
Zm9ybWF0aW9uPC9uczF0cmltOlNUPgoJCQkJCQkJCQk8L25zMXRyaW06dGl0bGU+CgkJCQkJCQkJ
CTxuczF0cmltOm9ic2VydmF0aW9uPgoJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWU+CgkJCQkJCQkJ
CQkJPG5zMXRyaW06bGFiZWw+UmFjZTwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQk8bnMxdHJp
bTp2YWx1ZVNldD5yYWNlPC9uczF0cmltOnZhbHVlU2V0PgoJCQkJCQkJCQkJCTxuczF0cmltOlNF
VENFPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5XaGl0ZTwvbnMxdHJpbTpkaXNw
bGF5TmFtZT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT4yNTY3MzM1PC9uczF0cmltOmNvZGU+
CgkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuMy4yNi4y
PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1OYW1l
PkNBRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2Rl
U3lzdGVtVmVyc2lvbj4yLjE8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQkJCQkJ
PC9uczF0cmltOlNFVENFPgoJCQkJCQkJCQkJCTxuczF0cmltOkNEPgoJCQkJCQkJCQkJCQk8bnMx
dHJpbTpjb2RlPjEwMzU3OTAwOSB8IHJhY2UgfDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lz
dGVtPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRy
aW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9u
PkphbnVhcnkgMjAwOTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJCQkJCQkJPG5z
MXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDwvbnMxdHJp
bTpjb2RlPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4
My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVT
eXN0ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5z
MXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJ
CQkJCQkJCQkJCQk8L25zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJPC9uczF0cmltOkNE
PgoJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWU+CgkJ
CQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+RXRobmljaXR5PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJ
CQkJCTxuczF0cmltOnZhbHVlU2V0PmV0aG5pY2l0eTwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJ
CQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+Tm90IEhp
c3BhbmljIG9yIExhdGlubzwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQkJCQkJPG5zMXRy
aW06Y29kZT5UQkQ8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3Rl
bT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJCQkJ
PG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1l
PgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj5KYW51YXJ5IDIwMDk8L25z
MXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJ
CQkJCTxuczF0cmltOkNEPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPjM2NDY5OTAwOTwvbnMx
dHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEz
ODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lz
dGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPkphbnVhcnkgMjAwOTwvbnMxdHJpbTpjb2RlU3lzdGVt
VmVyc2lvbj4KCQkJCQkJCQkJCQkJPG5zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQk8
bnMxdHJpbTpjb2RlPjIwMDI0NDA8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuMy4yNi4yPC9uczF0cmltOmNvZGVTeXN0ZW0+
CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMxdHJpbTpjb2Rl
U3lzdGVtTmFtZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwv
bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnRyYW5zbGF0
aW9uPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpDRD4KCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4K
CQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPlNTTjwv
bnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQk8bnMxdHJpbTpTVD4xMjMtNDUtOTk5NTwvbnMxdHJp
bTpTVD4KCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT4z
OTgwOTMwMDU8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4y
LjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJCQkJPG5z
MXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJ
CQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj5KYW51YXJ5IDIwMDk8L25zMXRy
aW06Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQkJCQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJ
CQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJ
CTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuMy4yNi4yPC9uczF0cmltOmNv
ZGVTeXN0ZW0+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMx
dHJpbTpjb2RlU3lzdGVtTmFtZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJz
aW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmlt
OnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpDRD4KCQkJCQkJCQkJCTwvbnMxdHJp
bTp2YWx1ZT4KCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTxuczF0cmltOmxh
YmVsPkluc3RpdHV0aW9uPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOm9yaWdp
bmFsVGV4dD5Vbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgU2FuIEZyYW5jaXNjbyAoVUNTRik8L25z
MXRyaW06b3JpZ2luYWxUZXh0PgoJCQkJCQkJCQkJCTxuczF0cmltOlNUPlVDU0Y8L25zMXRyaW06
U1Q+CgkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCTwvbnMxdHJpbTpvYnNlcnZh
dGlvbj4KCQkJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRpcmVjdGlvbj0iSU4iIGVuYWJs
ZWQ9ImZhbHNlIiBuYW1lPSJnZW5kZXIiIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJCQkJCTxuczF0
cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJCQk8bnMx
dHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmNvZGU+MjYzNDk1MDAwPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2Rl
U3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNvZGVTeXN0
ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFudWFyeSAy
MDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06dHJh
bnNsYXRpb24+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06Y29kZT4K
CQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjMuMjYu
MjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1O
YW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJ
CQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmltOkNEPgoJ
CQkJCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCTxuczF0cmltOnRpdGxlPgoJCQkJ
CQkJCQkJCQk8bnMxdHJpbTpTVD5NYWxlPC9uczF0cmltOlNUPgoJCQkJCQkJCQkJCTwvbnMxdHJp
bTp0aXRsZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIg
ZW5hYmxlZD0idHJ1ZSIgbmFtZT0iZ2VuZGVyU3RhdHVzIiB0eXBlQ29kZT0iTkFNRSI+CgkJCQkJ
CQkJCQkJCTxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIi8+CgkJ
CQkJCQkJCQkJPC9uczF0cmltOnJlbGF0aW9uc2hpcD4KCQkJCQkJCQkJCTwvbnMxdHJpbTphY3Q+
CgkJCQkJCQkJCTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQkJCTxuczF0cmltOnJlbGF0
aW9uc2hpcCBkaXJlY3Rpb249IklOIiBuYW1lPSJtcm4iIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJ
CQkJCTxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJ
CQkJCQk8bnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJ
CTxuczF0cmltOmNvZGU+Mzk4MjI1MDAxPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQk8bnMx
dHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lzdGVt
PgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmlt
OmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+
SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJPG5z
MXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRy
aW06Y29kZT4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEz
ODgzLjMuMjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCTxuczF0cmltOmNv
ZGVTeXN0ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQkJ
CTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lv
bj4KCQkJCQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJPC9uczF0
cmltOkNEPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCTxuczF0cmltOm9i
c2VydmF0aW9uPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0
cmltOmxhYmVsPk1STjwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQkJCTxuczF0cmltOlNUPjk5
NjAwNTwvbnMxdHJpbTpTVD4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJ
CTwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJCQkJ
CTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQkJCTxuczF0cmltOnJlbGF0aW9uc2hpcCBk
aXJlY3Rpb249IklOIiBuYW1lPSJjb3VudHJ5IiB0eXBlQ29kZT0iTkFNRSI+CgkJCQkJCQkJCQk8
bnMxdHJpbTphY3QgY2xhc3NDb2RlPSJFTlRSWSIgbW9vZENvZGU9IkVWTiI+CgkJCQkJCQkJCQkJ
PG5zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJ
CQkJCQkJPG5zMXRyaW06bGFiZWw+Q291bnRyeSBvZiBiaXJ0aDwvbnMxdHJpbTpsYWJlbD4KCQkJ
CQkJCQkJCQkJCTxuczF0cmltOlNULz4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJ
CQkJCQkJCTwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJ
CQkJCQkJCTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJ
CQkJCTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAg
ZGlyZWN0aW9uPSJJTiIgbmFtZT0iYWRkcmVzcyIgdHlwZUNvZGU9Ik5BTUUiPgoJCQkJCQkJCTxu
czF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJPG5z
MXRyaW06dGl0bGU+CgkJCQkJCQkJCQk8bnMxdHJpbTpTVD5QYXRpZW50IEFkZHJlc3M8L25zMXRy
aW06U1Q+CgkJCQkJCQkJCTwvbnMxdHJpbTp0aXRsZT4KCQkJCQkJCQkJPG5zMXRyaW06b2JzZXJ2
YXRpb24+CgkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJl
bD5aaXA8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJPG5zMXRyaW06U1QvPgoJCQkJCQkJCQkJ
PC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQk8L25zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJ
PC9uczF0cmltOmFjdD4KCQkJCQkJCTwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQk8bnMx
dHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIgbmFtZT0icmVnaXN0cmF0aW9uIiB0eXBl
Q29kZT0iTkFNRSI+CgkJCQkJCQkJPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iRU5UUlkiIG1vb2RD
b2RlPSJFVk4iPgoJCQkJCQkJCQk8bnMxdHJpbTp0aXRsZT4KCQkJCQkJCQkJCTxuczF0cmltOlNU
PlJlZ2lzdHJhdGlvbjwvbnMxdHJpbTpTVD4KCQkJCQkJCQkJPC9uczF0cmltOnRpdGxlPgoJCQkJ
CQkJCQk8bnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJ
CQkJCQkJCTxuczF0cmltOmxhYmVsPlJlZ2lzdHJhdGlvbiBEYXRlPC9uczF0cmltOmxhYmVsPgoJ
CQkJCQkJCQkJCTxuczF0cmltOlRTPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4yMDEyMDMw
NzwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8L25zMXRyaW06VFM+CgkJCQkJCQkJCQk8L25z
MXRyaW06dmFsdWU+CgkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJp
bTpsYWJlbD5TdHVkeSBDb29yZGluYXRvcjwvbnMxdHJpbTpsYWJlbD4KCQkJCQkJCQkJCQk8bnMx
dHJpbTp2YWx1ZVNldD5zdHVkeUNvb3JkaW5hdG9yPC9uczF0cmltOnZhbHVlU2V0PgoJCQkJCQkJ
CQkJCTxuczF0cmltOkNEPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDwvbnMxdHJpbTpj
b2RlPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYu
NTwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFt
ZT5TTk9NRUQgQ1Q8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCTxuczF0cmlt
OmNvZGVTeXN0ZW1WZXJzaW9uPkphbnVhcnkgMjAwOTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lv
bj4KCQkJCQkJCQkJCQkJPG5zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQkJCQkJCQk8bnMxdHJp
bTpjb2RlPlRCRDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3Rl
bT4yLjE2Ljg0MC4xLjExMzg4My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJ
CQkJCTxuczF0cmltOmNvZGVTeXN0ZW1OYW1lPmNhRFNSPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1l
PgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNv
ZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQk8L25zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJ
CQkJCQkJPC9uczF0cmltOkNEPgoJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQk8
L25zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJCQkJCTwvbnMx
dHJpbTpyZWxhdGlvbnNoaXA+CgkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9u
PSJJTiIgbmFtZT0ic3R1ZHlTdGFmZiIgdHlwZUNvZGU9Ik5BTUUiPgoJCQkJCQkJCTxuczF0cmlt
OmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJPG5zMXRyaW06
dGl0bGU+CgkJCQkJCQkJCQk8bnMxdHJpbTpTVD5TdHVkeSBTdGFmZjwvbnMxdHJpbTpTVD4KCQkJ
CQkJCQkJPC9uczF0cmltOnRpdGxlPgoJCQkJCQkJCQk8bnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJ
CQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPk9uY29sb2dp
c3Q8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWVTZXQ+b25jb2xvZ2lz
dDwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJCQkJCQk8bnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJ
PG5zMXRyaW06Y29kZT4zMDkyOTUwMDA8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4K
CQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+U05PTUVEIENUPC9uczF0cmltOmNv
ZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj5KYW51
YXJ5IDIwMDk8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQkJCQkJCTxuczF0cmlt
OnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQ8L25zMXRyaW06Y29k
ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuMy4y
Ni4yPC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVt
TmFtZT5jYURTUjwvbnMxdHJpbTpjb2RlU3lzdGVtTmFtZT4KCQkJCQkJCQkJCQkJCTxuczF0cmlt
OmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJ
CQkJCQkJPC9uczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpDRD4KCQkJ
CQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJ
CQkJCTxuczF0cmltOmxhYmVsPlN1cmdlb248L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJPG5z
MXRyaW06dmFsdWVTZXQ+c3VyZ2VvbjwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJCQkJCQk8bnMx
dHJpbTpDRD4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDQyOTIwMDQ8L25zMXRyaW06Y29k
ZT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8
L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+
U05PTUVEIENUPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTpj
b2RlU3lzdGVtVmVyc2lvbj5KYW51YXJ5IDIwMDk8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+
CgkJCQkJCQkJCQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06
Y29kZT5UQkQ8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+
Mi4xNi44NDAuMS4xMTM4ODMuMy4yNi4yPC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJCQkJ
CQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMxdHJpbTpjb2RlU3lzdGVtTmFtZT4K
CQkJCQkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2Rl
U3lzdGVtVmVyc2lvbj4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJ
CQkJCTwvbnMxdHJpbTpDRD4KCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJPC9u
czF0cmltOm9ic2VydmF0aW9uPgoJCQkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0
aW9uPSJJTiIgbmFtZT0iY2xpbmljYWxDb29yZGluYXRvciIgdHlwZUNvZGU9Ik5BTUUiPgoJCQkJ
CQkJCQkJPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iRU5UUlkiIG1vb2RDb2RlPSJFVk4iPgoJCQkJ
CQkJCQkJCTxuczF0cmltOm9ic2VydmF0aW9uPgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4K
CQkJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPkNsaW5pY2FsIENvb3JkaW5hdG9yPC9uczF0cmlt
OmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWVTZXQ+Y2xpbmljYWxDb29yZGluYXRv
cjwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJCQkJCQkJCTxuczF0cmltOkNEPgoJCQkJCQkJCQkJ
CQkJCTxuczF0cmltOmNvZGU+VEJEPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4K
CQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRyaW06
Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+
SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJCTxu
czF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDwvbnMx
dHJpbTpjb2RlPgoJCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEu
MTEzODgzLjMuMjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCQk8bnMxdHJp
bTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMxdHJpbTpjb2RlU3lzdGVtTmFtZT4KCQkJCQkJCQkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVTeXN0ZW1W
ZXJzaW9uPgoJCQkJCQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJCQkJCQkJ
CTwvbnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCQk8
bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPlBob25lPC9uczF0cmlt
OmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06U1QvPgoJCQkJCQkJCQkJCQk8L25zMXRyaW06
dmFsdWU+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06
bGFiZWw+RmF4PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06U1QvPgoJCQkJ
CQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJ
CQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+RW1haWw8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJ
CQk8bnMxdHJpbTpTVC8+CgkJCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8
L25zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJCQk8L25zMXRyaW06YWN0PgoJCQkJCQkJCQk8
L25zMXRyaW06cmVsYXRpb25zaGlwPgoJCQkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGly
ZWN0aW9uPSJJTiIgbmFtZT0icmFkaW9sb2d5Q29vcmRpbmF0b3IiIHR5cGVDb2RlPSJOQU1FIj4K
CQkJCQkJCQkJCTxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4K
CQkJCQkJCQkJCQk8bnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJCQkJPG5zMXRyaW06dmFs
dWU+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJlbD5SYWRpb2xvZ3kgQ29vcmRpbmF0b3I8L25z
MXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZVNldD5yYWRpb2xvZ3lDb29y
ZGluYXRvcjwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJCQkJCQkJCTxuczF0cmltOkNEPgoJCQkJ
CQkJCQkJCQkJCTxuczF0cmltOmNvZGU+VEJEPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJCQkJCQkJ
PG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5
c3RlbT4KCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25z
MXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZl
cnNpb24+SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJ
CQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRC
RDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYu
ODQwLjEuMTEzODgzLjMuMjYuMjwvbnMxdHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMxdHJpbTpjb2RlU3lzdGVtTmFtZT4KCQkJ
CQkJCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPgoJCQkJCQkJCQkJCQkJCTwvbnMxdHJpbTp0cmFuc2xhdGlvbj4KCQkJCQkJ
CQkJCQkJCTwvbnMxdHJpbTpDRD4KCQkJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJ
CQkJCQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPlBob25lPC9u
czF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06U1QvPgoJCQkJCQkJCQkJCQk8L25z
MXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCQkJPG5z
MXRyaW06bGFiZWw+RmF4PC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06U1Qv
PgoJCQkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJCQkJCTxuczF0cmltOnZhbHVl
PgoJCQkJCQkJCQkJCQkJPG5zMXRyaW06bGFiZWw+RW1haWw8L25zMXRyaW06bGFiZWw+CgkJCQkJ
CQkJCQkJCQk8bnMxdHJpbTpTVC8+CgkJCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJ
CQkJCQk8L25zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJCQk8L25zMXRyaW06YWN0PgoJCQkJ
CQkJCQk8L25zMXRyaW06cmVsYXRpb25zaGlwPgoJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJ
CQk8L25zMXRyaW06cmVsYXRpb25zaGlwPgoJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRp
cmVjdGlvbj0iSU4iIG5hbWU9ImxlZ2FsRGF0ZXMiIHR5cGVDb2RlPSJOQU1FIj4KCQkJCQkJCQk8
bnMxdHJpbTphY3QgY2xhc3NDb2RlPSJFTlRSWSIgbW9vZENvZGU9IkVWTiI+CgkJCQkJCQkJCTxu
czF0cmltOnRpdGxlPgoJCQkJCQkJCQkJPG5zMXRyaW06U1Q+TGVnYWwgLyBEYXRlczwvbnMxdHJp
bTpTVD4KCQkJCQkJCQkJPC9uczF0cmltOnRpdGxlPgoJCQkJCQkJCQk8bnMxdHJpbTpvYnNlcnZh
dGlvbj4KCQkJCQkJCQkJCTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVs
PklSQiBBcHByb3ZhbCBEYXRlPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOlRT
PgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4yMDEyMDMwNzwvbnMxdHJpbTp2YWx1ZT4KCQkJ
CQkJCQkJCQk8L25zMXRyaW06VFM+CgkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJ
CQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJlbD5TY3JlZW5pbmcgSW5m
b3JtZWQgQ29uc2VudCBEYXRlPC9uczF0cmltOmxhYmVsPgoJCQkJCQkJCQkJCTxuczF0cmltOlRT
PgoJCQkJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZT4yMDEyMDMwNzwvbnMxdHJpbTp2YWx1ZT4KCQkJ
CQkJCQkJCQk8L25zMXRyaW06VFM+CgkJCQkJCQkJCQk8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJ
CQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpsYWJlbD5ISVBBQSBDb25zZW50
IERhdGU8L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJPG5zMXRyaW06VFM+CgkJCQkJCQkJCQkJ
CTxuczF0cmltOnZhbHVlPjIwMTIwMzA3PC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTwvbnMx
dHJpbTpUUz4KCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJPC9uczF0cmltOm9i
c2VydmF0aW9uPgoJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJCQk8L25zMXRyaW06cmVsYXRp
b25zaGlwPgoJCQkJCQkJPG5zMXRyaW06cmVsYXRpb25zaGlwIGRpcmVjdGlvbj0iSU4iIG5hbWU9
ImNhVGlzc3VlU3RhdHVzIiB0eXBlQ29kZT0iTkFNRSI+CgkJCQkJCQkJPG5zMXRyaW06YWN0IGNs
YXNzQ29kZT0iRU5UUlkiIG1vb2RDb2RlPSJFVk4iPgoJCQkJCQkJCQk8bnMxdHJpbTpiaW5kIGFw
cGxpY2F0aW9uPSJlY2hyIiBwaGFzZT0iY3JlYXRlIj4KCQkJCQkJCQkJCTxuczF0cmltOnBsYWNl
aG9sZGVyIGJpbmRBY3Rpb249ImNyZWF0ZSI+CgkJCQkJCQkJCQkJPG5zMXRyaW06cGF0aD5lY2hy
OnBhdGllbnQ6Y2FzZVJlcG9ydEZvcm06Y2FUaXNzdWVWYWx1ZXM8L25zMXRyaW06cGF0aD4KCQkJ
CQkJCQkJCTwvbnMxdHJpbTpwbGFjZWhvbGRlcj4KCQkJCQkJCQkJPC9uczF0cmltOmJpbmQ+CgkJ
CQkJCQkJCTxuczF0cmltOmlkPgoJCQkJCQkJCQkJPG5zMXRyaW06SUk+CgkJCQkJCQkJCQkJPG5z
MXRyaW06cm9vdD4xLjIuMS40NzAwMzwvbnMxdHJpbTpyb290PgoJCQkJCQkJCQkJCTxuczF0cmlt
OmV4dGVuc2lvbj5lY2hyOnBhdGllbnQtMjAwMzAxNDpjYXNlUmVwb3J0Rm9ybS0yNjcyMjIxOmNh
VGlzc3VlVmFsdWVzLTI2NzIyMjM8L25zMXRyaW06ZXh0ZW5zaW9uPgoJCQkJCQkJCQkJPC9uczF0
cmltOklJPgoJCQkJCQkJCQk8L25zMXRyaW06aWQ+CgkJCQkJCQkJCTxuczF0cmltOnRpdGxlPgoJ
CQkJCQkJCQkJPG5zMXRyaW06U1Q+Y2FUaXNzdWVTdGF0dXM8L25zMXRyaW06U1Q+CgkJCQkJCQkJ
CTwvbnMxdHJpbTp0aXRsZT4KCQkJCQkJCQkJPG5zMXRyaW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJ
CQk8bnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8bnMxdHJpbTpJTlQ+CgkJCQkJCQkJCQkJCTxu
czF0cmltOmxhYmVsPlBhcnRpY2lwYW50IG5vdCBjcmVhdGVkIHlldDwvbnMxdHJpbTpsYWJlbD4K
CQkJCQkJCQkJCQkJPG5zMXRyaW06dmFsdWU+MDwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJCQk8
L25zMXRyaW06SU5UPgoJCQkJCQkJCQkJPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQk8L25zMXRy
aW06b2JzZXJ2YXRpb24+CgkJCQkJCQkJPC9uczF0cmltOmFjdD4KCQkJCQkJCTwvbnMxdHJpbTpy
ZWxhdGlvbnNoaXA+CgkJCQkJCQk8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIg
bmFtZT0icGF0aWVudERPQiIgdHlwZUNvZGU9Ik5BTUUiPgoJCQkJCQkJCTxuczF0cmltOmFjdCBj
bGFzc0NvZGU9IkVOVFJZIiBtb29kQ29kZT0iRVZOIj4KCQkJCQkJCQkJPG5zMXRyaW06dGl0bGU+
CgkJCQkJCQkJCQk8bnMxdHJpbTpTVD5QYXRpZW50IERPQjwvbnMxdHJpbTpTVD4KCQkJCQkJCQkJ
PC9uczF0cmltOnRpdGxlPgoJCQkJCQkJCQk8bnMxdHJpbTpvYnNlcnZhdGlvbj4KCQkJCQkJCQkJ
CTxuczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTxuczF0cmltOmxhYmVsPlBhdGllbnQgRE9COiA8
L25zMXRyaW06bGFiZWw+CgkJCQkJCQkJCQkJPG5zMXRyaW06VFM+CgkJCQkJCQkJCQkJCTxuczF0
cmltOnZhbHVlPjE5NDEwNTAyPC9uczF0cmltOnZhbHVlPgoJCQkJCQkJCQkJCTwvbnMxdHJpbTpU
Uz4KCQkJCQkJCQkJCTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQkJPC9uczF0cmltOm9ic2VydmF0
aW9uPgoJCQkJCQkJCTwvbnMxdHJpbTphY3Q+CgkJCQkJCQk8L25zMXRyaW06cmVsYXRpb25zaGlw
PgoJCQkJCQkJPG5zMXRyaW06Y29tcHV0ZT4KCQkJCQkJCQk8bnMxdHJpbTp0eXBlPm9yZy50b2x2
ZW4ucHJvY2Vzcy5SYW5kb21JREdlbmVyYXRvcjwvbnMxdHJpbTp0eXBlPgoJCQkJCQkJCTxuczF0
cmltOnByb3BlcnR5IG5hbWU9ImVuYWJsZWQiPgoJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZSB4bWxu
czp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhzaTp0eXBlPSJ4czpib29s
ZWFuIj5mYWxzZTwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQk8L25zMXRyaW06cHJvcGVydHk+CgkJ
CQkJCQkJPG5zMXRyaW06cHJvcGVydHkgbmFtZT0icGF0aCI+CgkJCQkJCQkJCTxuczF0cmltOnZh
bHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeHNpOnR5cGU9
InhzOnN0cmluZyI+ZWNocjpwYXRpZW50czp0cmlhbHM8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJ
PC9uczF0cmltOnByb3BlcnR5PgoJCQkJCQkJPC9uczF0cmltOmNvbXB1dGU+CgkJCQkJCQk8bnMx
dHJpbTpjb21wdXRlPgoJCQkJCQkJCTxuczF0cmltOnR5cGU+b3JnLnRvbHZlbi5wcm9jZXNzLkNS
RlByaW9yPC9uczF0cmltOnR5cGU+CgkJCQkJCQkJPG5zMXRyaW06cHJvcGVydHkgbmFtZT0iZW5h
YmxlZCI+CgkJCQkJCQkJCTxuczF0cmltOnZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9y
Zy8yMDAxL1hNTFNjaGVtYSIgeHNpOnR5cGU9InhzOmJvb2xlYW4iPmZhbHNlPC9uczF0cmltOnZh
bHVlPgoJCQkJCQkJCTwvbnMxdHJpbTpwcm9wZXJ0eT4KCQkJCQkJCQk8bnMxdHJpbTpwcm9wZXJ0
eSBuYW1lPSJhY3Rpb24iPgoJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZSB4bWxuczp4cz0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhzaTp0eXBlPSJ4czpzdHJpbmciPnJlZ2lzdHJh
dGlvbjwvbnMxdHJpbTp2YWx1ZT4KCQkJCQkJCQk8L25zMXRyaW06cHJvcGVydHk+CgkJCQkJCQkJ
PG5zMXRyaW06cHJvcGVydHkgbmFtZT0icGF0aCI+CgkJCQkJCQkJCTxuczF0cmltOnZhbHVlIHht
bG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeHNpOnR5cGU9InhzOnN0
cmluZyI+ZWNocjpwYXRpZW50czphbGw8L25zMXRyaW06dmFsdWU+CgkJCQkJCQkJPC9uczF0cmlt
OnByb3BlcnR5PgoJCQkJCQkJPC9uczF0cmltOmNvbXB1dGU+CgkJCQkJCQk8bnMxdHJpbTpjb21w
dXRlPgoJCQkJCQkJCTxuczF0cmltOnR5cGU+b3JnLnRvbHZlbi5wcm9jZXNzLkNSRlByaW9yPC9u
czF0cmltOnR5cGU+CgkJCQkJCQkJPG5zMXRyaW06cHJvcGVydHkgbmFtZT0iY29tcHV0ZUVuYWJs
ZWQiPgoJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWEiIHhzaTp0eXBlPSJ4czpib29sZWFuIj50cnVlPC9uczF0cmltOnZhbHVl
PgoJCQkJCQkJCTwvbnMxdHJpbTpwcm9wZXJ0eT4KCQkJCQkJCQk8bnMxdHJpbTpwcm9wZXJ0eSBu
YW1lPSJhY3Rpb24iPgoJCQkJCQkJCQk8bnMxdHJpbTp2YWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3
dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhzaTp0eXBlPSJ4czpzdHJpbmciPmNhVGlzc3VlPC9u
czF0cmltOnZhbHVlPgoJCQkJCQkJCTwvbnMxdHJpbTpwcm9wZXJ0eT4KCQkJCQkJCQk8bnMxdHJp
bTpwcm9wZXJ0eSBuYW1lPSJwYXRoIj4KCQkJCQkJCQkJPG5zMXRyaW06dmFsdWUgeG1sbnM6eHM9
Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj5l
Y2hyOnBhdGllbnQ6Y2FzZVJlcG9ydEZvcm1zOmNhVGlzc3VlVmFsdWVMaXN0PC9uczF0cmltOnZh
bHVlPgoJCQkJCQkJCTwvbnMxdHJpbTpwcm9wZXJ0eT4KCQkJCQkJCTwvbnMxdHJpbTpjb21wdXRl
PgoJCQkJCQk8L25zMXRyaW06YWN0PgoJCQkJCQk8bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJyYWNl
Ij4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJCTxuczF0cmltOmRpc3BsYXlOYW1lPkFtZXJp
Y2FuIEluZGlhbiBvciBBbGFza2EgTmF0aXZlPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJ
CTxuczF0cmltOmNvZGU+MjU2MTE0MDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCTxuczF0cmltOmNv
ZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuMy4yNi4yPC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5h
bWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJ
CQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+QXNpYW48L25zMXRyaW06ZGlzcGxheU5hbWU+CgkJ
CQkJCQkJPG5zMXRyaW06Y29kZT4yNTY3MzM4PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3Rl
bT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5jYURTUjwvbnMxdHJpbTpjb2RlU3lz
dGVtTmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yLjE8L25zMXRyaW06
Y29kZVN5c3RlbVZlcnNpb24+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpD
RT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5CbGFjayBvciBBZnJpY2FuIEFtZXJpY2Fu
PC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+MjU2MTI0ODwvbnMx
dHJpbTpjb2RlPgoJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMu
My4yNi4yPC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbU5h
bWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5
c3RlbVZlcnNpb24+Mi4xPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJCQkJPC9uczF0
cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+
TmF0aXZlIEhhd2FpaWFuIG9yIE90aGVyIFBhY2lmaWMgSXNsYW5kZXI8L25zMXRyaW06ZGlzcGxh
eU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4yMDE0MDAwMyB8IEhhd2FpaWFucyB8PC9uczF0
cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42
LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtTmFtZT5T
Tk9NRUQgQ1Q8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5
c3RlbVZlcnNpb24+SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJ
CQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQk8bnMxdHJpbTpjb2RlPjI1NjczMzk8
L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjEx
Mzg4My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5
c3RlbU5hbWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJCQkJCTxuczF0cmlt
OmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJ
CQk8L25zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMx
dHJpbTpDRT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5XaGl0ZTwvbnMxdHJpbTpkaXNw
bGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlPjI1NjczMzU8L25zMXRyaW06Y29kZT4KCQkJ
CQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjMuMjYuMjwvbnMxdHJp
bTpjb2RlU3lzdGVtPgoJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1OYW1lPkNBRFNSPC9uczF0
cmltOmNvZGVTeXN0ZW1OYW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIu
MTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJ
PC9uczF0cmltOnZhbHVlU2V0PgoJCQkJCQk8bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJldGhuaWNp
dHkiPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+SGlz
cGFuaWMgb3IgTGF0aW5vPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0cmltOmNv
ZGU+NDE0NDA4MDA0PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4y
LjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQk8bnMxdHJp
bTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPgoJCQkJCQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQk8bnMx
dHJpbTpjb2RlPjI1ODExNzY8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5
c3RlbT4yLjE2Ljg0MC4xLjExMzg4My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+
CgkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lz
dGVtVmVyc2lvbj4KCQkJCQkJCQk8L25zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQk8L25zMXRy
aW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5O
b3QgSGlzcGFuaWMgb3IgTGF0aW5vPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0
cmltOmNvZGU+VEJEPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4y
LjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCQk8bnMxdHJp
bTpjb2RlU3lzdGVtTmFtZT5TTk9NRUQgQ1Q8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+SmFudWFyeSAyMDA5PC9uczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPgoJCQkJCQkJCTxuczF0cmltOnRyYW5zbGF0aW9uPgoJCQkJCQkJCQk8bnMx
dHJpbTpjb2RlPjI1NjcxMTA8L25zMXRyaW06Y29kZT4KCQkJCQkJCQkJPG5zMXRyaW06Y29kZVN5
c3RlbT4yLjE2Ljg0MC4xLjExMzg4My4zLjI2LjI8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbU5hbWU+Y2FEU1I8L25zMXRyaW06Y29kZVN5c3RlbU5hbWU+
CgkJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIuMTwvbnMxdHJpbTpjb2RlU3lz
dGVtVmVyc2lvbj4KCQkJCQkJCQk8L25zMXRyaW06dHJhbnNsYXRpb24+CgkJCQkJCQk8L25zMXRy
aW06Q0U+CgkJCQkJCTwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJPG5zMXRyaW06dmFsdWVTZXQg
bmFtZT0ic3RhZmYiPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5zMXRyaW06ZGlzcGxh
eU5hbWU+U3RhZmYgMTwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2Rl
PkMwMDI0NTc5PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2
Ljg0MC4xLjExMzg4My42LjU2PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJPG5zMXRyaW06
Y29kZVN5c3RlbVZlcnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJCQkJ
CQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5zMXRyaW06ZGlz
cGxheU5hbWU+U3RhZmYgMjwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpj
b2RlPkMwMDI0NTgwPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4y
LjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbVZlcnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgoJ
CQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5zMXRyaW06
ZGlzcGxheU5hbWU+U3RhZmYgMzwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJp
bTpjb2RlPkMwMDI0NTgxPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3Rl
bT4yLjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQkJPG5z
MXRyaW06Y29kZVN5c3RlbVZlcnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9u
PgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQk8L25zMXRyaW06dmFsdWVTZXQ+CgkJCQkJCTxu
czF0cmltOnZhbHVlU2V0IG5hbWU9Im9uY29sb2dpc3QiPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJ
CQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+UnVnbywgSG9wZSA8L25zMXRyaW06ZGlzcGxheU5h
bWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDAwPC9uczF0cmltOmNvZGU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29k
ZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJ
CTxuczF0cmltOmRpc3BsYXlOYW1lPkVzc2VybWFuICwgTGF1cmEgPC9uczF0cmltOmRpc3BsYXlO
YW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+MzA5Mjk1MDAwMTwvbnMxdHJpbTpjb2RlPgoJCQkJ
CQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNv
ZGVTeXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJ
CQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5BbHZhcmFkbywgTWljaGFlbCA8L25zMXRyaW06ZGlzcGxh
eU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDAyPC9uczF0cmltOmNvZGU+CgkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06
Y29kZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJ
CQkJCTxuczF0cmltOmRpc3BsYXlOYW1lPkV3aW5nLCBDaGVyeWwgPC9uczF0cmltOmRpc3BsYXlO
YW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+MzA5Mjk1MDAwMzwvbnMxdHJpbTpjb2RlPgoJCQkJ
CQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNv
ZGVTeXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJ
CQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5Id2FuZywgU2hlbGxleSA8L25zMXRyaW06ZGlzcGxheU5h
bWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDA0PC9uczF0cmltOmNvZGU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29k
ZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJ
CTxuczF0cmltOmRpc3BsYXlOYW1lPiBNZWxpc2tvLCBNaWNoZWxsZSA8L25zMXRyaW06ZGlzcGxh
eU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDA1PC9uczF0cmltOmNvZGU+CgkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06
Y29kZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJ
CQkJCTxuczF0cmltOmRpc3BsYXlOYW1lPkNoaWVuLCBKbyA8L25zMXRyaW06ZGlzcGxheU5hbWU+
CgkJCQkJCQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDA2PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJ
PG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5
c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJCTxu
czF0cmltOmRpc3BsYXlOYW1lPk1vYXNzZXIsIE1hcmsgIDwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
CQkJCQkJCQk8bnMxdHJpbTpjb2RlPjMwOTI5NTAwMDc8L25zMXRyaW06Y29kZT4KCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lz
dGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5z
MXRyaW06ZGlzcGxheU5hbWU+TXVuc3RlciwgUGFtZWxhIDwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
CQkJCQkJCQk8bnMxdHJpbTpjb2RlPjMwOTI5NTAwMDg8L25zMXRyaW06Y29kZT4KCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lz
dGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5z
MXRyaW06ZGlzcGxheU5hbWU+UGFyaywgSm9obiA8L25zMXRyaW06ZGlzcGxheU5hbWU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZT4zMDkyOTUwMDA5PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4K
CQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJPC9uczF0cmltOnZhbHVlU2V0PgoJCQkJCQk8bnMx
dHJpbTp2YWx1ZVNldCBuYW1lPSJzdXJnZW9uIj4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJ
CTxuczF0cmltOmRpc3BsYXlOYW1lPlJ1Z28sIEhvcGUgPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJ
CQkJCQkJCTxuczF0cmltOmNvZGU+MzA0MjkyMDA0MDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVTeXN0
ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8bnMx
dHJpbTpkaXNwbGF5TmFtZT5Fc3Nlcm1hbiAsIExhdXJhIDwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
CQkJCQkJCQk8bnMxdHJpbTpjb2RlPjMwNDI5MjAwNDE8L25zMXRyaW06Y29kZT4KCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lz
dGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5z
MXRyaW06ZGlzcGxheU5hbWU+QWx2YXJhZG8sIE1pY2hhZWwgPC9uczF0cmltOmRpc3BsYXlOYW1l
PgoJCQkJCQkJCTxuczF0cmltOmNvZGU+MzA0MjkyMDA0MjwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJ
CTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVT
eXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8
bnMxdHJpbTpkaXNwbGF5TmFtZT5Fd2luZywgQ2hlcnlsIDwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
CQkJCQkJCQk8bnMxdHJpbTpjb2RlPjMwNDI5MjAwNDM8L25zMXRyaW06Y29kZT4KCQkJCQkJCQk8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2RlU3lz
dGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJPG5z
MXRyaW06ZGlzcGxheU5hbWU+SHdhbmcsIFNoZWxsZXkgPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJ
CQkJCQkJCTxuczF0cmltOmNvZGU+MzA0MjkyMDA0NDwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCTxu
czF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVTeXN0
ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8bnMx
dHJpbTpkaXNwbGF5TmFtZT4gTWVsaXNrbywgTWljaGVsbGUgPC9uczF0cmltOmRpc3BsYXlOYW1l
PgoJCQkJCQkJCTxuczF0cmltOmNvZGU+MzA0MjkyMDA0NTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJ
CTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVT
eXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8
bnMxdHJpbTpkaXNwbGF5TmFtZT5DaGllbiwgSm8gPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJ
CQkJCTxuczF0cmltOmNvZGU+MzA0MjkyMDA0NjwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCTxuczF0
cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVTeXN0ZW0+
CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJCQk8bnMxdHJp
bTpkaXNwbGF5TmFtZT5Nb2Fzc2VyLCBNYXJrICA8L25zMXRyaW06ZGlzcGxheU5hbWU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZT4zMDQyOTIwMDQ3PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4K
CQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJCTxuczF0cmlt
OmRpc3BsYXlOYW1lPk11bnN0ZXIsIFBhbWVsYSA8L25zMXRyaW06ZGlzcGxheU5hbWU+CgkJCQkJ
CQkJPG5zMXRyaW06Y29kZT4zMDQyOTIwMDQ4PC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRy
aW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3RlbT4K
CQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0cmltOkNFPgoJCQkJCQkJCTxuczF0cmlt
OmRpc3BsYXlOYW1lPlBhcmssIEpvaG4gPC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxu
czF0cmltOmNvZGU+MzA0MjkyMDA0OTwvbnMxdHJpbTpjb2RlPgoJCQkJCQkJCTxuczF0cmltOmNv
ZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJ
CQk8L25zMXRyaW06Q0U+CgkJCQkJCTwvbnMxdHJpbTp2YWx1ZVNldD4KCQkJCQkJPG5zMXRyaW06
dmFsdWVTZXQgbmFtZT0iY2xpbmljYWxDb29yZGluYXRvciI+CgkJCQkJCQk8bnMxdHJpbTpDRT4K
CQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5MeWFuZHJlcywgSnVsaWEgPC9uczF0cmltOmRp
c3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+VEJEMDwvbnMxdHJpbTpjb2RlPgoJCQkJ
CQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9uczF0cmltOmNv
ZGVTeXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpDRT4KCQkJCQkJ
CQk8bnMxdHJpbTpkaXNwbGF5TmFtZT4gV2F0a2lucywgTWFyZ2FyaXRhIDwvbnMxdHJpbTpkaXNw
bGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDE8L25zMXRyaW06Y29kZT4KCQkJCQkJ
CQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMxdHJpbTpjb2Rl
U3lzdGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+CgkJCQkJCQkJ
PG5zMXRyaW06ZGlzcGxheU5hbWU+RCdBbmRyZWEsIENhcnJpZSA8L25zMXRyaW06ZGlzcGxheU5h
bWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQyPC9uczF0cmltOmNvZGU+CgkJCQkJCQkJPG5z
MXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06Y29kZVN5c3Rl
bT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJPC9uczF0cmltOnZhbHVlU2V0PgoJCQkJCQk8
bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJyYWRpb2xvZ3lDb29yZGluYXRvciI+CgkJCQkJCQk8bnMx
dHJpbTpDRT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5MeWFuZHJlcywgSnVsaWEgPC9u
czF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+VEJEMDwvbnMxdHJpbTpj
b2RlPgoJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41PC9u
czF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJpbTpD
RT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT4gV2F0a2lucywgTWFyZ2FyaXRhIDwvbnMx
dHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDE8L25zMXRyaW06Y29k
ZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMx
dHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQkJPG5zMXRyaW06Q0U+
CgkJCQkJCQkJPG5zMXRyaW06ZGlzcGxheU5hbWU+RCdBbmRyZWEsIENhcnJpZSA8L25zMXRyaW06
ZGlzcGxheU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQyPC9uczF0cmltOmNvZGU+CgkJ
CQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU8L25zMXRyaW06
Y29kZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJPC9uczF0cmltOnZhbHVlU2V0
PgoJCQkJCQk8bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJzdHVkeUNvb3JkaW5hdG9yIj4KCQkJCQkJ
CTxuczF0cmltOkNFPgoJCQkJCQkJCTxuczF0cmltOmRpc3BsYXlOYW1lPkx5YW5kcmVzLCBKdWxp
YSA8L25zMXRyaW06ZGlzcGxheU5hbWU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZT5UQkQwPC9uczF0
cmltOmNvZGU+CgkJCQkJCQkJPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42
LjU8L25zMXRyaW06Y29kZVN5c3RlbT4KCQkJCQkJCTwvbnMxdHJpbTpDRT4KCQkJCQkJCTxuczF0
cmltOkNFPgoJCQkJCQkJCTxuczF0cmltOmRpc3BsYXlOYW1lPiBXYXRraW5zLCBNYXJnYXJpdGEg
PC9uczF0cmltOmRpc3BsYXlOYW1lPgoJCQkJCQkJCTxuczF0cmltOmNvZGU+VEJEMTwvbnMxdHJp
bTpjb2RlPgoJCQkJCQkJCTxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41
PC9uczF0cmltOmNvZGVTeXN0ZW0+CgkJCQkJCQk8L25zMXRyaW06Q0U+CgkJCQkJCQk8bnMxdHJp
bTpDRT4KCQkJCQkJCQk8bnMxdHJpbTpkaXNwbGF5TmFtZT5EJ0FuZHJlYSwgQ2FycmllIDwvbnMx
dHJpbTpkaXNwbGF5TmFtZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlPlRCRDI8L25zMXRyaW06Y29k
ZT4KCQkJCQkJCQk8bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTwvbnMx
dHJpbTpjb2RlU3lzdGVtPgoJCQkJCQkJPC9uczF0cmltOkNFPgoJCQkJCQk8L25zMXRyaW06dmFs
dWVTZXQ+CgkJCQkJPC9uczF0cmltOnRyaW0+CgkJCQk8L21lczpidXNpbmVzc01lc3NhZ2VQYXls
b2FkPgoJCQk8L21lczpyZXF1ZXN0PgoJCTwvbWVzOmNhWGNoYW5nZVJlcXVlc3RNZXNzYWdlPgoJ
PC9zb3VyY2VEYXRhPgoJPGNsaW5pY2FsTWV0YURhdGEgZG9jdW1lbnRUeXBlPSJSZWdpc3RyYXRp
b24iIHBhdGllbnRJZEV4dGVuc2lvbj0icGF0aWVudF9pZF8xIiBwYXRpZW50SWRSb290PSIyLjE2
Ljg0MC4xLjExMzg4My4zIiBzaXRlSWRFeHRlbnNpb249InNpdGVfaWQiIHNpdGVJZFJvb3Q9IjIu
MTYuODQwLjEuMTEzODgzLjIiIHN0dWR5SWRFeHRlbnNpb249InN0dWR5X2lkIiBzdHVkeUlkUm9v
dD0iMi4xNi44NDAuMS4xMTM4ODMuMSIvPgo8L2NhQ0lTUmVxdWVzdD4K</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules>
        <rule>
          <sequenceNumber>0</sequenceNumber>
          <name>authentication</name>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>//A JavaScript rule should return true to accept the message, or false to reject it.
logger.info(&quot;inbound = &quot; + msg);

default xml namespace= &quot;http://caXchange.nci.nih.gov/messaging&quot;;

channelMap.put(&apos;transcendUserName&apos;, msg[&apos;metadata&apos;][&apos;credentials&apos;][&apos;userName&apos;].toString() );
channelMap.put(&apos;transcendPassword&apos;, msg[&apos;metadata&apos;][&apos;credentials&apos;][&apos;password&apos;].toString() );

if( channelMap.get(&apos;transcendUserName&apos;) == globalMap.get(&apos;transcend.ihub.client.user&apos;) &amp;&amp;
	channelMap.get(&apos;transcendPassword&apos;) == globalMap.get(&apos;transcend.ihub.client.password&apos;) ) {	
} else {
	var msgParams = [&quot;value1&quot;, &quot;value2&quot;];
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1015, msgParams);	
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}

//for both case, return true to accept the message, as the proper error response will have to be sent back
return true;</string>
            </entry>
          </data>
          <type>JavaScript</type>
          <script>//A JavaScript rule should return true to accept the message, or false to reject it.
logger.info(&quot;inbound = &quot; + msg);

default xml namespace= &quot;http://caXchange.nci.nih.gov/messaging&quot;;

channelMap.put(&apos;transcendUserName&apos;, msg[&apos;metadata&apos;][&apos;credentials&apos;][&apos;userName&apos;].toString() );
channelMap.put(&apos;transcendPassword&apos;, msg[&apos;metadata&apos;][&apos;credentials&apos;][&apos;password&apos;].toString() );

if( channelMap.get(&apos;transcendUserName&apos;) == globalMap.get(&apos;transcend.ihub.client.user&apos;) &amp;&amp;
	channelMap.get(&apos;transcendPassword&apos;) == globalMap.get(&apos;transcend.ihub.client.password&apos;) ) {	
} else {
	var msgParams = [&quot;value1&quot;, &quot;value2&quot;];
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1015, msgParams);	
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}

//for both case, return true to accept the message, as the proper error response will have to be sent back
return true;</script>
          <operator>NONE</operator>
        </rule>
      </rules>
    </filter>
    <transportName>Web Service Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>PersistMsgInDBConnector</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">var referenceMessageId = $(&apos;referenceMessageId&apos;);
try {
	var iHubMsgId = persistIHubMessageInDB(Packages.java.lang.Long.parseLong(referenceMessageId), $(&apos;requestMessage&apos;));
	channelMap.put(&apos;iHubMsgId&apos;, iHubMsgId);
} catch(err) {
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1042, err, null);
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}
return;</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxjYWNpczpjYUNJU1JlcXVlc3QgeG1sbnM6Y2RhPSJ1cm46
aGw3LW9yZzp2MyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1p
bnN0YW5jZSIgeG1sbnM6Y2FjaXM9Imh0dHA6Ly9jYWNpcy5uY2kubmloLmdvdiIgeG1sbnM6bnMx
dHJpbT0idXJuOnRvbHZlbi1vcmc6dHJpbTo0LjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9y
Zy9UUi8yMDA4L1JFQy14bWwtMjAwODExMjYjIj4KICA8Y2FjaXM6cm91dGluZ0luc3RydWN0aW9u
cz4KICAgIDxjYWNpczpleGNoYW5nZURvY3VtZW50IGV4Y2hhbmdlRm9ybWF0PSJBRSIvPgogIDwv
Y2FjaXM6cm91dGluZ0luc3RydWN0aW9ucz4KICA8Y2FjaXM6c291cmNlRGF0YT4KICAgIDxuczF0
cmltOnRyaW0+CiAgICAgICAgICAgIDxuczF0cmltOmV4dGVuZHM+cGF0aWVudEFjdDwvbnMxdHJp
bTpleHRlbmRzPgogICAgICAgICAgICA8bnMxdHJpbTpuYW1lPm9icy9ldm4vcmFuZG9taXphdGlv
bjwvbnMxdHJpbTpuYW1lPgogICAgICAgICAgICA8bnMxdHJpbTpkZXNjcmlwdGlvbj5CYXNlbGlu
ZSBTeW1wdG9tczwvbnMxdHJpbTpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgPG5zMXRyaW06YXV0
aG9yPlRvbHZlbjwvbnMxdHJpbTphdXRob3I+CiAgICAgICAgICAgIDxuczF0cmltOnBhZ2U+cmFu
ZG9taXphdGlvbi54aHRtbDwvbnMxdHJpbTpwYWdlPgogICAgICAgICAgICA8bnMxdHJpbTpkcmls
bGRvd24+cmFuZG9taXphdGlvbkRELnhodG1sPC9uczF0cmltOmRyaWxsZG93bj4KICAgICAgICAg
ICAgPG5zMXRyaW06bWVudT5nbG9iYWw6Y2FzZVJlcG9ydEZvcm1NZW51PC9uczF0cmltOm1lbnU+
CiAgICAgICAgICAgIDxuczF0cmltOnRvbHZlbkV2ZW50SWQgYWNjb3VudElkPSIxNjUwMDAiIGFw
cGxpY2F0aW9uPSJlY2hyIiBpZD0iMTAzMDA0OCIgcGF0aD0iZWNocjpwYXRpZW50LTEwMjEwOTM6
Y2FzZVJlcG9ydEZvcm0tMTAzMDA0OCIgcHJpbmNpcGFsPSJ2IiBzdGF0dXM9ImFjdGl2ZSIgdGlt
ZXN0YW1wPSIyMDA5MDcwNzEwMjUwNCAwMDAwIi8+CiAgICAgICAgICAgIDxuczF0cmltOnJlZmVy
ZW5jZS8+CiAgICAgICAgICAgIDxuczF0cmltOmFwcGxpY2F0aW9uIG5hbWU9ImVjaHIiIHNpZ25h
dHVyZVJlcXVpcmVkPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxuczF0cmltOmluc3RhbmNlPmVj
aHI6cGF0aWVudDpjYXNlUmVwb3J0Rm9ybTwvbnMxdHJpbTppbnN0YW5jZT4KICAgICAgICAgICAg
ICAgIDxuczF0cmltOndpcD5lY2hyOmFjdGl2aXR5OmFsbDwvbnMxdHJpbTp3aXA+CiAgICAgICAg
ICAgIDwvbnMxdHJpbTphcHBsaWNhdGlvbj4KICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlv
bnMgcGF0aD0idHJpbS5hY3Quc3RhdHVzQ29kZVZhbHVlIj4KICAgICAgICAgICAgICAgIDxuczF0
cmltOnRyYW5zaXRpb24gbmFtZT0iY3JlYXRlIiB0bz0iYWN0aXZlIj4KICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpsYWJlbCBsYW5ndWFnZT0iZW4iPkFjdGl2ZTwvbnMxdHJpbTpsYWJlbD4K
ICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0aW9uPgogICAgICAgICAgICAgICAgPG5z
MXRyaW06dHJhbnNpdGlvbiBmcm9tPSJhY3RpdmUiIG5hbWU9ImNvbXBsZXRlIiB0bz0iY29tcGxl
dGVkIj4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJlbCBsYW5ndWFnZT0iZW4iPkNv
bXBsZXRlZDwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0
aW9uPgogICAgICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlvbiBmcm9tPSJhY3RpdmUiIG5h
bWU9InJldmlzZUFjdGl2ZSIgdG89ImFjdGl2ZSI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRy
aW06bGFiZWwgbGFuZ3VhZ2U9ImVuIj5SZXZpc2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAg
ICAgICA8L25zMXRyaW06dHJhbnNpdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnRyYW5z
aXRpb24gZnJvbT0iYWN0aXZlIiBuYW1lPSJlaWUiIHRvPSJudWxsaWZpZWQiPgogICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOmxhYmVsIGxhbmd1YWdlPSJlbiI+RW50ZXJlZCBpbiBFcnJvcjwv
bnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0aW9uPgogICAg
ICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlvbiBmcm9tPSJjb21wbGV0ZWQiIG5hbWU9InJl
dmlzZUNvbXBsZXRlZCIgdG89ImNvbXBsZXRlZCI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRy
aW06bGFiZWwgbGFuZ3VhZ2U9ImVuIj5SZXZpc2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAg
ICAgICA8L25zMXRyaW06dHJhbnNpdGlvbj4KICAgICAgICAgICAgPC9uczF0cmltOnRyYW5zaXRp
b25zPgogICAgICAgICAgICA8bnMxdHJpbTphY3QgY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJF
Vk4iPgogICAgICAgICAgICAgICAgPG5zMXRyaW06YmluZCBhcHBsaWNhdGlvbj0iZWNociIgcGhh
c2U9ImNyZWF0ZSI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxhY2Vob2xkZXIgYmlu
ZEFjdGlvbj0iY3JlYXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5l
Y2hyOnBhdGllbnQ6Y2FzZVJlcG9ydEZvcm08L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAg
ICAgICA8L25zMXRyaW06cGxhY2Vob2xkZXI+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06Ymlu
ZD4KICAgICAgICAgICAgICAgIDxuczF0cmltOmlkPgogICAgICAgICAgICAgICAgICAgIDxuczF0
cmltOklJPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpyb290PjEuMi4xLjE2NTAw
MDwvbnMxdHJpbTpyb290PgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpleHRlbnNp
b24+ZWNocjpwYXRpZW50LTEwMjEwOTM6Y2FzZVJlcG9ydEZvcm0tMTAzMDA0NzwvbnMxdHJpbTpl
eHRlbnNpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOklJPgogICAgICAgICAgICAg
ICAgPC9uczF0cmltOmlkPgogICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT4KICAgICAgICAg
ICAgICAgICAgICA8bnMxdHJpbTpDRD4KICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06
Y29kZT5DMDAxNzUwNjwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpjb2RlU3lzdGVtTmFtZT5VTUxTPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgogICAgICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3QUE8L25zMXRy
aW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOkNEPgog
ICAgICAgICAgICAgICAgPC9uczF0cmltOmNvZGU+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpz
dGF0dXNDb2RlPmFjdGl2ZTwvbnMxdHJpbTpzdGF0dXNDb2RlPgogICAgICAgICAgICAgICAgPG5z
MXRyaW06dGl0bGU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06U1Q+UmFuZG9taXphdGlv
biBGb3JtPC9uczF0cmltOlNUPgogICAgICAgICAgICAgICAgPC9uczF0cmltOnRpdGxlPgogICAg
ICAgICAgICAgICAgPG5zMXRyaW06ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpsYWJlbD5EYXRlIG9mIFRoZXJhcHk6PC9uczF0cmltOmxhYmVsPgogICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOm5ldyBkYXRhdHlwZT0iVFMiIGZ1bmN0aW9uPSJub3ciLz4KICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpUUz4KICAgICAgICAgICAgICAgICAgICAgICAgPG5z
MXRyaW06dmFsdWU+MjAwOTA3MDcxNTU1MDQgMDUzMDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAg
ICAgICAgICAgICA8L25zMXRyaW06VFM+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06ZWZmZWN0
aXZlVGltZT4KICAgICAgICAgICAgICAgIDxuczF0cmltOnBhcnRpY2lwYXRpb24gbmFtZT0ic3Vi
amVjdCIgdHlwZUNvZGU9IlNCSiI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cm9sZSBj
bGFzc0NvZGU9IlBBVCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmJpbmQgYXBw
bGljYXRpb249ImVjaHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxh
Y2Vob2xkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5l
Y2hyOnBhdGllbnQ8L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwv
bnMxdHJpbTpwbGFjZWhvbGRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmJp
bmQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmJpbmQgYXBwbGljYXRpb249ImVw
aHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxhY2Vob2xkZXI+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5lcGhyOnBhdGllbnQ8
L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpwbGFj
ZWhvbGRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmJpbmQ+CiAgICAgICAg
ICAgICAgICAgICAgICAgIDxuczF0cmltOmlkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06SUk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cm9v
dD4xLjIuMS4xNjUwMDA8L25zMXRyaW06cm9vdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpleHRlbnNpb24+ZWNocjpwYXRpZW50LTEwMjEwOTM8L25zMXRyaW06ZXh0
ZW5zaW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOklJPgogICAgICAg
ICAgICAgICAgICAgICAgICA8L25zMXRyaW06aWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOnBsYXllciBjbGFzc0NvZGU9IlBTTiIgZGV0ZXJtaW5lckNvZGU9IklOU1RBTkNFIj4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm5hbWU+CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06bGFiZWw+UGF0aWVudCBOYW1lPC9uczF0cmltOmxh
YmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkVOPgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJlbD5MZWdhbCBOYW1lPC9u
czF0cmltOmxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJp
bTp1c2U+TDwvbnMxdHJpbTp1c2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpsYWJlbD5GaXJzdCBOYW1lPC9uczF0cmltOmxhYmVsPgogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dHlwZT5HSVY8L25zMXRyaW06dHlwZT4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOlNUPldpbGxp
ZTwvbnMxdHJpbTpTVD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0
cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnBh
cnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJl
bD5NaWRkbGUgTmFtZTwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOnR5cGU+R0lWPC9uczF0cmltOnR5cGU+CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpTVD5SdXRoPC9uczF0cmltOlNU
PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06cGFydD4KICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGFydD4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmxhYmVsPkxhc3QgTmFtZTwv
bnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOnR5cGU+RkFNPC9uczF0cmltOnR5cGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpTVD5aaXBzZTwvbnMxdHJpbTpTVD4KICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOkVOPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PC9uczF0cmltOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpwbGF5ZXI+
CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnJvbGU+CiAgICAgICAgICAgICAgICA8L25z
MXRyaW06cGFydGljaXBhdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnBhcnRpY2lwYXRp
b24gbmFtZT0iZGF0YUVudGVyZXIiIHR5cGVDb2RlPSJFTlQiPgogICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOnJvbGUgY2xhc3NDb2RlPSJST0wiPgogICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTppZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOklJPgogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnJvb3Q+MS4yLjEuMTY1MDAwPC9u
czF0cmltOnJvb3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06ZXh0
ZW5zaW9uPnY8L25zMXRyaW06ZXh0ZW5zaW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PC9uczF0cmltOklJPgogICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06aWQ+CiAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOnJvbGU+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06
cGFydGljaXBhdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJl
Y3Rpb249IklOIiBuYW1lPSJ0cmVhdG1lbnRDb25zZW50IiB0eXBlQ29kZT0iQVBORCI+CiAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUNDTSIgbW9vZENvZGU9IkFQ
VCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmVmZmVjdGl2ZVRpbWU+CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpJVkxfVFM+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06Y2VudGVyPgogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICA8bnMxdHJpbTpUUz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDxuczF0cmltOnZhbHVlPjIwMDkwNzA2PC9uczF0cmltOnZhbHVlPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06VFM+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOmNlbnRlcj4KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDwvbnMxdHJpbTpJVkxfVFM+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpl
ZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpvYnNlcnZhdGlv
bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5ZZXM8L25zMXRyaW06ZGlzcGxheU5h
bWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGU+QzAx
ODMxMDg8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0cmltOmNvZGVT
eXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICA8L25zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJl
bD5PdGhlcjwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpTVC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06dmFsdWU+
CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAg
ICAgICAgICAgICA8L25zMXRyaW06YWN0PgogICAgICAgICAgICAgICAgPC9uczF0cmltOnJlbGF0
aW9uc2hpcD4KICAgICAgICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249
IklOIiBuYW1lPSJyYWNlQ29sbGVjdGlvbiIgdHlwZUNvZGU9IkFQTkQiPgogICAgICAgICAgICAg
ICAgICAgIDxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkFDQ00iIG1vb2RDb2RlPSJBUFQiPgogICAg
ICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxuczF0cmltOmxhYmVsPnJhY2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06U0VUQ0U+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOmRpc3BsYXlOYW1lPldoaXRlPC9uczF0cmltOmRpc3BsYXlOYW1l
PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlPkMwMDI0
NTgzPC9uczF0cmltOmNvZGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lz
dGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lz
dGVtVmVyc2lvbj4yMDA3QUE8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOlNFVENFPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOlNFVENFPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5Bc2lhbjwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT5DMDAxNTc4
NDwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5c3Rl
bT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3Rl
bVZlcnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpTRVRDRT4KICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmlt
Om9ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTphY3Q+CiAgICAgICAg
ICAgICAgICA8L25zMXRyaW06cmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPG5zMXRyaW06
cmVsYXRpb25zaGlwIGRpcmVjdGlvbj0iSU4iIG5hbWU9ImFjdGl2aXR5U3RhdHVzIiB0eXBlQ29k
ZT0iQVBORCI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUND
TSIgbW9vZENvZGU9IkFQVCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm9ic2Vy
dmF0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dmFsdWU+CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06bGFiZWw+YWN0aXZpdHlTdGF0dXM8
L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06
U1Q+QWN0aXZlPC9uczF0cmltOlNUPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0
cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06b2JzZXJ2YXRpb24+
CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmFjdD4KICAgICAgICAgICAgICAgIDwvbnMx
dHJpbTpyZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpyZWxhdGlvbnNoaXAg
ZGlyZWN0aW9uPSJJTiIgbmFtZT0iZXRobmljaXR5IiB0eXBlQ29kZT0iQVBORCI+CiAgICAgICAg
ICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUNDTSIgbW9vZENvZGU9IkFQVCI+
CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm9ic2VydmF0aW9uPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06bGFiZWw+ZXRobmljaXR5PC9uczF0cmltOmxhYmVsPgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5IaXNwYW5pYyBvciBMYXRpbm88
L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmNvZGU+QzAwMjQ1Nzk8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42
LjU2PC9uczF0cmltOmNvZGVTeXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVt
VmVyc2lvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAg
ICAgICAgICAgIDwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgICA8L25z
MXRyaW06YWN0PgogICAgICAgICAgICAgICAgPC9uczF0cmltOnJlbGF0aW9uc2hpcD4KICAgICAg
ICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249IklOIiBuYW1lPSJjb2xs
ZWN0aW9uUHJvdG9jb2wiIHR5cGVDb2RlPSJBUE5EIj4KICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTphY3QgY2xhc3NDb2RlPSJBQ0NNIiBtb29kQ29kZT0iQVBUIj4KICAgICAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06b2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICA8bnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJp
bTpsYWJlbD50aXRsZTwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpTVD5Ub2x2ZW4gVGVzdCBQcm90b2NvbDwvbnMxdHJpbTpTVD4KICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmxhYmVsPnNob3J0VGl0bGU8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06U1Q+VFRQPC9uczF0cmltOlNUPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAg
ICA8L25zMXRyaW06b2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmFj
dD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAg
ICA8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIgbmFtZT0iY2Rtc1N1YmplY3RJ
ZCIgdHlwZUNvZGU9IkFQTkQiPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmFjdCBjbGFz
c0NvZGU9IkFDQ00iIG1vb2RDb2RlPSJBUFQiPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnZh
bHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmxhYmVsPmNkbXNT
dWJqZWN0SWQ8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06U1Q+Y3ByVGVzdFBhcnRpY2lwYW50MTAwMDwvbnMxdHJpbTpTVD4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAg
ICAgPC9uczF0cmltOm9ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTph
Y3Q+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06cmVsYXRpb25zaGlwPgogICAgICAgICAgICA8
L25zMXRyaW06YWN0PgogICAgICAgICAgICA8bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJ0cmVhdG1l
bnRDb25zZW50Qm9vbGVhblZhbHVlcyI+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpDRT4KICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5ZZXM8L25zMXRyaW06ZGlzcGxh
eU5hbWU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT5DMDE4MzEwODwvbnMxdHJp
bTpjb2RlPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAu
MS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lzdGVtPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lv
bj4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpDRT4KICAgICAgICAgICAgICAgIDxuczF0cmlt
OkNFPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmRpc3BsYXlOYW1lPk5vPC9uczF0cmlt
OmRpc3BsYXlOYW1lPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGU+QzAxODMxMDc8
L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtPjIu
MTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5c3RlbT4KICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3QUE8L25zMXRyaW06Y29kZVN5c3Rl
bVZlcnNpb24+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAgICAgICAgICAgIDwvbnMx
dHJpbTp2YWx1ZVNldD4KICAgICAgICAgICAgPG5zMXRyaW06dmFsdWVTZXQgbmFtZT0idHJlYXRt
ZW50Q29uc2VudE5vUmVhc29ucyI+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpDRT4KICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5EZWNpZGVkIG5vdCB0byBoYXZlIG5l
b2FkanV2YW50IGNoZW1vdGhlcmFweTwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KICAgICAgICAgICAg
ICAgICAgICA8bnMxdHJpbTpjb2RlPkMwMTgzMTA3PC9uczF0cmltOmNvZGU+CiAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0
cmltOmNvZGVTeXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbVZl
cnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgogICAgICAgICAgICAgICAg
PC9uczF0cmltOkNFPgogICAgICAgICAgICAgICAgPG5zMXRyaW06Q0U+CiAgICAgICAgICAgICAg
ICAgICAgPG5zMXRyaW06ZGlzcGxheU5hbWU+RGVjaWRlZCBub3QgdG8gYmUgdHJlYXRlZCB3aXRo
IGEgbm92ZWwgYWdlbnQ8L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06Y29kZT5DMDE4MzEwODwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2Rl
U3lzdGVtPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIw
MDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAgICAgICAgIDwvbnMxdHJp
bTpDRT4KICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmRpc3BsYXlOYW1lPlBhdGllbnQgZm91bmQgdG8gYmUgaW5lbGlnaWJsZSBmb3Igc3R1
ZHk8L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29k
ZT5DMDE4MzEwOTwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNv
ZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lzdGVtPgogICAg
ICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJp
bTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpDRT4KICAgICAg
ICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmRpc3Bs
YXlOYW1lPk90aGVyPC9uczF0cmltOmRpc3BsYXlOYW1lPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGU+QzAxODMxMTA8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5
c3RlbT4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3
QUE8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06
Q0U+CiAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZVNldD4KICAgICAgICA8L25zMXRyaW06dHJp
bT4KICA8L2NhY2lzOnNvdXJjZURhdGE+CiAgPGNhY2lzOmNsaW5pY2FsTWV0YURhdGEgc2l0ZUlk
Um9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMiIgcGF0aWVudElkUm9vdD0iMi4xNi44NDAuMS4xMTM4
ODMuMyIgc2l0ZUlkRXh0ZW5zaW9uPSJzaXRlX2lkIiBwYXRpZW50SWRFeHRlbnNpb249InBhdGll
bnRfaWRfMSIgc3R1ZHlJZFJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEiIHN0dWR5SWRFeHRlbnNp
b249InN0dWR5X2lkIiBkb2N1bWVudFR5cGU9IkJhc2VsaW5lIFN5bXB0b21zIi8+CjwvY2FjaXM6
Y2FDSVNSZXF1ZXN0Pgo=</inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;$(&apos;msgTyp&apos;)&quot; equals globalMap.get(&apos;AE&apos;) or globalMap.get(&apos;REGN&apos;) or globalMap.get(&apos;UPDTREGN&apos;) or globalMap.get(&apos;SPMN&apos;) or globalMap.get(&apos;UPDTSPMN&apos;) or globalMap.get(&apos;REGTCNST&apos;)</name>
            <data class="map">
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>globalMap.get(&apos;AE&apos;)</string>
                  <string>globalMap.get(&apos;REGN&apos;)</string>
                  <string>globalMap.get(&apos;UPDTREGN&apos;)</string>
                  <string>globalMap.get(&apos;SPMN&apos;)</string>
                  <string>globalMap.get(&apos;UPDTSPMN&apos;)</string>
                  <string>globalMap.get(&apos;REGTCNST&apos;)</string>
                </list>
              </entry>
              <entry>
                <string>Field</string>
                <string>$(&apos;msgTyp&apos;)</string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;msgTyp&apos;) == globalMap.get(&apos;AE&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;REGN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;UPDTREGN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;SPMN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;UPDTSPMN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;REGTCNST&apos;))
{
return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;)&quot; equals null</name>
            <data class="map">
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>null</string>
                </list>
              </entry>
              <entry>
                <string>Field</string>
                <string>channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;)</string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;) == null)
{
return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
    <connector>
      <name>caCISRequestSenderConnector</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">try {
	var client = globalMap.get(&quot;CaCISClient&quot;);
	var wsdlUrl = globalMap.get(&quot;CaCISWsdlUrl&quot;);
	
	var cr = new XML(messageObject.getEncodedData());
	default xml namespace = &apos;http://cacis.nci.nih.gov&apos;;

	var srcDt = cr[&apos;sourceData&apos;];

	default xml namespace = &apos;http://caXchange.nci.nih.gov/caxchangerequest&apos;;

	var xChngReq = srcDt[&apos;caxchangerequest&apos;];

	default xml namespace = &apos;http://caXchange.nci.nih.gov/messaging&apos;;

	//xChngReq[&apos;metadata&apos;][&apos;caXchangeIdentifier&apos;]=channelMap.get(&apos;referenceMessageId&apos;);
	
	var cacisResponse = client.acceptSource(wsdlUrl, cr.toString());

	logger.info(&quot;cacisResponse=&quot; + cacisResponse);
	responseMap.put(&apos;caCISRequestSenderConnector&apos;, cacisResponse);
} catch(err) {
	logger.debug(&quot;cacis channel error = &quot; + err.message);
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1043, err, err.message);
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}

return;</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxjYWNpczpjYUNJU1JlcXVlc3QgeG1sbnM6Y2RhPSJ1cm46
aGw3LW9yZzp2MyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1p
bnN0YW5jZSIgeG1sbnM6Y2FjaXM9Imh0dHA6Ly9jYWNpcy5uY2kubmloLmdvdiIgeG1sbnM6bnMx
dHJpbT0idXJuOnRvbHZlbi1vcmc6dHJpbTo0LjAiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9y
Zy9UUi8yMDA4L1JFQy14bWwtMjAwODExMjYjIj4KICA8Y2FjaXM6cm91dGluZ0luc3RydWN0aW9u
cz4KICAgIDxjYWNpczpleGNoYW5nZURvY3VtZW50IGV4Y2hhbmdlRm9ybWF0PSJBRSIvPgogIDwv
Y2FjaXM6cm91dGluZ0luc3RydWN0aW9ucz4KICA8Y2FjaXM6c291cmNlRGF0YT4KICAgIDxuczF0
cmltOnRyaW0+CiAgICAgICAgICAgIDxuczF0cmltOmV4dGVuZHM+cGF0aWVudEFjdDwvbnMxdHJp
bTpleHRlbmRzPgogICAgICAgICAgICA8bnMxdHJpbTpuYW1lPm9icy9ldm4vcmFuZG9taXphdGlv
bjwvbnMxdHJpbTpuYW1lPgogICAgICAgICAgICA8bnMxdHJpbTpkZXNjcmlwdGlvbj5CYXNlbGlu
ZSBTeW1wdG9tczwvbnMxdHJpbTpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgPG5zMXRyaW06YXV0
aG9yPlRvbHZlbjwvbnMxdHJpbTphdXRob3I+CiAgICAgICAgICAgIDxuczF0cmltOnBhZ2U+cmFu
ZG9taXphdGlvbi54aHRtbDwvbnMxdHJpbTpwYWdlPgogICAgICAgICAgICA8bnMxdHJpbTpkcmls
bGRvd24+cmFuZG9taXphdGlvbkRELnhodG1sPC9uczF0cmltOmRyaWxsZG93bj4KICAgICAgICAg
ICAgPG5zMXRyaW06bWVudT5nbG9iYWw6Y2FzZVJlcG9ydEZvcm1NZW51PC9uczF0cmltOm1lbnU+
CiAgICAgICAgICAgIDxuczF0cmltOnRvbHZlbkV2ZW50SWQgYWNjb3VudElkPSIxNjUwMDAiIGFw
cGxpY2F0aW9uPSJlY2hyIiBpZD0iMTAzMDA0OCIgcGF0aD0iZWNocjpwYXRpZW50LTEwMjEwOTM6
Y2FzZVJlcG9ydEZvcm0tMTAzMDA0OCIgcHJpbmNpcGFsPSJ2IiBzdGF0dXM9ImFjdGl2ZSIgdGlt
ZXN0YW1wPSIyMDA5MDcwNzEwMjUwNCAwMDAwIi8+CiAgICAgICAgICAgIDxuczF0cmltOnJlZmVy
ZW5jZS8+CiAgICAgICAgICAgIDxuczF0cmltOmFwcGxpY2F0aW9uIG5hbWU9ImVjaHIiIHNpZ25h
dHVyZVJlcXVpcmVkPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxuczF0cmltOmluc3RhbmNlPmVj
aHI6cGF0aWVudDpjYXNlUmVwb3J0Rm9ybTwvbnMxdHJpbTppbnN0YW5jZT4KICAgICAgICAgICAg
ICAgIDxuczF0cmltOndpcD5lY2hyOmFjdGl2aXR5OmFsbDwvbnMxdHJpbTp3aXA+CiAgICAgICAg
ICAgIDwvbnMxdHJpbTphcHBsaWNhdGlvbj4KICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlv
bnMgcGF0aD0idHJpbS5hY3Quc3RhdHVzQ29kZVZhbHVlIj4KICAgICAgICAgICAgICAgIDxuczF0
cmltOnRyYW5zaXRpb24gbmFtZT0iY3JlYXRlIiB0bz0iYWN0aXZlIj4KICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpsYWJlbCBsYW5ndWFnZT0iZW4iPkFjdGl2ZTwvbnMxdHJpbTpsYWJlbD4K
ICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0aW9uPgogICAgICAgICAgICAgICAgPG5z
MXRyaW06dHJhbnNpdGlvbiBmcm9tPSJhY3RpdmUiIG5hbWU9ImNvbXBsZXRlIiB0bz0iY29tcGxl
dGVkIj4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJlbCBsYW5ndWFnZT0iZW4iPkNv
bXBsZXRlZDwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0
aW9uPgogICAgICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlvbiBmcm9tPSJhY3RpdmUiIG5h
bWU9InJldmlzZUFjdGl2ZSIgdG89ImFjdGl2ZSI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRy
aW06bGFiZWwgbGFuZ3VhZ2U9ImVuIj5SZXZpc2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAg
ICAgICA8L25zMXRyaW06dHJhbnNpdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnRyYW5z
aXRpb24gZnJvbT0iYWN0aXZlIiBuYW1lPSJlaWUiIHRvPSJudWxsaWZpZWQiPgogICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOmxhYmVsIGxhbmd1YWdlPSJlbiI+RW50ZXJlZCBpbiBFcnJvcjwv
bnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp0cmFuc2l0aW9uPgogICAg
ICAgICAgICAgICAgPG5zMXRyaW06dHJhbnNpdGlvbiBmcm9tPSJjb21wbGV0ZWQiIG5hbWU9InJl
dmlzZUNvbXBsZXRlZCIgdG89ImNvbXBsZXRlZCI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRy
aW06bGFiZWwgbGFuZ3VhZ2U9ImVuIj5SZXZpc2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAg
ICAgICA8L25zMXRyaW06dHJhbnNpdGlvbj4KICAgICAgICAgICAgPC9uczF0cmltOnRyYW5zaXRp
b25zPgogICAgICAgICAgICA8bnMxdHJpbTphY3QgY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJF
Vk4iPgogICAgICAgICAgICAgICAgPG5zMXRyaW06YmluZCBhcHBsaWNhdGlvbj0iZWNociIgcGhh
c2U9ImNyZWF0ZSI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxhY2Vob2xkZXIgYmlu
ZEFjdGlvbj0iY3JlYXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5l
Y2hyOnBhdGllbnQ6Y2FzZVJlcG9ydEZvcm08L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAg
ICAgICA8L25zMXRyaW06cGxhY2Vob2xkZXI+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06Ymlu
ZD4KICAgICAgICAgICAgICAgIDxuczF0cmltOmlkPgogICAgICAgICAgICAgICAgICAgIDxuczF0
cmltOklJPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpyb290PjEuMi4xLjE2NTAw
MDwvbnMxdHJpbTpyb290PgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpleHRlbnNp
b24+ZWNocjpwYXRpZW50LTEwMjEwOTM6Y2FzZVJlcG9ydEZvcm0tMTAzMDA0NzwvbnMxdHJpbTpl
eHRlbnNpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOklJPgogICAgICAgICAgICAg
ICAgPC9uczF0cmltOmlkPgogICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT4KICAgICAgICAg
ICAgICAgICAgICA8bnMxdHJpbTpDRD4KICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06
Y29kZT5DMDAxNzUwNjwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpjb2RlU3lzdGVtTmFtZT5VTUxTPC9uczF0cmltOmNvZGVTeXN0ZW1OYW1lPgogICAgICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3QUE8L25zMXRy
aW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOkNEPgog
ICAgICAgICAgICAgICAgPC9uczF0cmltOmNvZGU+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpz
dGF0dXNDb2RlPmFjdGl2ZTwvbnMxdHJpbTpzdGF0dXNDb2RlPgogICAgICAgICAgICAgICAgPG5z
MXRyaW06dGl0bGU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06U1Q+UmFuZG9taXphdGlv
biBGb3JtPC9uczF0cmltOlNUPgogICAgICAgICAgICAgICAgPC9uczF0cmltOnRpdGxlPgogICAg
ICAgICAgICAgICAgPG5zMXRyaW06ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpsYWJlbD5EYXRlIG9mIFRoZXJhcHk6PC9uczF0cmltOmxhYmVsPgogICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOm5ldyBkYXRhdHlwZT0iVFMiIGZ1bmN0aW9uPSJub3ciLz4KICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpUUz4KICAgICAgICAgICAgICAgICAgICAgICAgPG5z
MXRyaW06dmFsdWU+MjAwOTA3MDcxNTU1MDQgMDUzMDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAg
ICAgICAgICAgICA8L25zMXRyaW06VFM+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06ZWZmZWN0
aXZlVGltZT4KICAgICAgICAgICAgICAgIDxuczF0cmltOnBhcnRpY2lwYXRpb24gbmFtZT0ic3Vi
amVjdCIgdHlwZUNvZGU9IlNCSiI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cm9sZSBj
bGFzc0NvZGU9IlBBVCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmJpbmQgYXBw
bGljYXRpb249ImVjaHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxh
Y2Vob2xkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5l
Y2hyOnBhdGllbnQ8L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwv
bnMxdHJpbTpwbGFjZWhvbGRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmJp
bmQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmJpbmQgYXBwbGljYXRpb249ImVw
aHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGxhY2Vob2xkZXI+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGF0aD5lcGhyOnBhdGllbnQ8
L25zMXRyaW06cGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpwbGFj
ZWhvbGRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmJpbmQ+CiAgICAgICAg
ICAgICAgICAgICAgICAgIDxuczF0cmltOmlkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06SUk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cm9v
dD4xLjIuMS4xNjUwMDA8L25zMXRyaW06cm9vdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpleHRlbnNpb24+ZWNocjpwYXRpZW50LTEwMjEwOTM8L25zMXRyaW06ZXh0
ZW5zaW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOklJPgogICAgICAg
ICAgICAgICAgICAgICAgICA8L25zMXRyaW06aWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOnBsYXllciBjbGFzc0NvZGU9IlBTTiIgZGV0ZXJtaW5lckNvZGU9IklOU1RBTkNFIj4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm5hbWU+CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06bGFiZWw+UGF0aWVudCBOYW1lPC9uczF0cmltOmxh
YmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkVOPgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJlbD5MZWdhbCBOYW1lPC9u
czF0cmltOmxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJp
bTp1c2U+TDwvbnMxdHJpbTp1c2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpsYWJlbD5GaXJzdCBOYW1lPC9uczF0cmltOmxhYmVsPgogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dHlwZT5HSVY8L25zMXRyaW06dHlwZT4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOlNUPldpbGxp
ZTwvbnMxdHJpbTpTVD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0
cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnBh
cnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJl
bD5NaWRkbGUgTmFtZTwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOnR5cGU+R0lWPC9uczF0cmltOnR5cGU+CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpTVD5SdXRoPC9uczF0cmltOlNU
PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06cGFydD4KICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06cGFydD4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmxhYmVsPkxhc3QgTmFtZTwv
bnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOnR5cGU+RkFNPC9uczF0cmltOnR5cGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpTVD5aaXBzZTwvbnMxdHJpbTpTVD4KICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnBhcnQ+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOkVOPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PC9uczF0cmltOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpwbGF5ZXI+
CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnJvbGU+CiAgICAgICAgICAgICAgICA8L25z
MXRyaW06cGFydGljaXBhdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnBhcnRpY2lwYXRp
b24gbmFtZT0iZGF0YUVudGVyZXIiIHR5cGVDb2RlPSJFTlQiPgogICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOnJvbGUgY2xhc3NDb2RlPSJST0wiPgogICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTppZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOklJPgogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnJvb3Q+MS4yLjEuMTY1MDAwPC9u
czF0cmltOnJvb3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06ZXh0
ZW5zaW9uPnY8L25zMXRyaW06ZXh0ZW5zaW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
PC9uczF0cmltOklJPgogICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06aWQ+CiAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOnJvbGU+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06
cGFydGljaXBhdGlvbj4KICAgICAgICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJl
Y3Rpb249IklOIiBuYW1lPSJ0cmVhdG1lbnRDb25zZW50IiB0eXBlQ29kZT0iQVBORCI+CiAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUNDTSIgbW9vZENvZGU9IkFQ
VCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmVmZmVjdGl2ZVRpbWU+CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpJVkxfVFM+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06Y2VudGVyPgogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICA8bnMxdHJpbTpUUz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDxuczF0cmltOnZhbHVlPjIwMDkwNzA2PC9uczF0cmltOnZhbHVlPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06VFM+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPC9uczF0cmltOmNlbnRlcj4KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDwvbnMxdHJpbTpJVkxfVFM+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpl
ZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpvYnNlcnZhdGlv
bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5ZZXM8L25zMXRyaW06ZGlzcGxheU5h
bWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGU+QzAx
ODMxMDg8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0cmltOmNvZGVT
eXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVT
eXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICA8L25zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpsYWJl
bD5PdGhlcjwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpTVC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06dmFsdWU+
CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAg
ICAgICAgICAgICA8L25zMXRyaW06YWN0PgogICAgICAgICAgICAgICAgPC9uczF0cmltOnJlbGF0
aW9uc2hpcD4KICAgICAgICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249
IklOIiBuYW1lPSJyYWNlQ29sbGVjdGlvbiIgdHlwZUNvZGU9IkFQTkQiPgogICAgICAgICAgICAg
ICAgICAgIDxuczF0cmltOmFjdCBjbGFzc0NvZGU9IkFDQ00iIG1vb2RDb2RlPSJBUFQiPgogICAg
ICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxuczF0cmltOmxhYmVsPnJhY2U8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgPG5zMXRyaW06U0VUQ0U+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOmRpc3BsYXlOYW1lPldoaXRlPC9uczF0cmltOmRpc3BsYXlOYW1l
PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlPkMwMDI0
NTgzPC9uczF0cmltOmNvZGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lz
dGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lz
dGVtVmVyc2lvbj4yMDA3QUE8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOlNFVENFPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDxuczF0cmltOlNFVENFPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5Bc2lhbjwvbnMxdHJpbTpkaXNwbGF5TmFtZT4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT5DMDAxNTc4
NDwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5c3Rl
bT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3Rl
bVZlcnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpTRVRDRT4KICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0cmlt
Om9ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTphY3Q+CiAgICAgICAg
ICAgICAgICA8L25zMXRyaW06cmVsYXRpb25zaGlwPgogICAgICAgICAgICAgICAgPG5zMXRyaW06
cmVsYXRpb25zaGlwIGRpcmVjdGlvbj0iSU4iIG5hbWU9ImFjdGl2aXR5U3RhdHVzIiB0eXBlQ29k
ZT0iQVBORCI+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUND
TSIgbW9vZENvZGU9IkFQVCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm9ic2Vy
dmF0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dmFsdWU+CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06bGFiZWw+YWN0aXZpdHlTdGF0dXM8
L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06
U1Q+QWN0aXZlPC9uczF0cmltOlNUPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uczF0
cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06b2JzZXJ2YXRpb24+
CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmFjdD4KICAgICAgICAgICAgICAgIDwvbnMx
dHJpbTpyZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpyZWxhdGlvbnNoaXAg
ZGlyZWN0aW9uPSJJTiIgbmFtZT0iZXRobmljaXR5IiB0eXBlQ29kZT0iQVBORCI+CiAgICAgICAg
ICAgICAgICAgICAgPG5zMXRyaW06YWN0IGNsYXNzQ29kZT0iQUNDTSIgbW9vZENvZGU9IkFQVCI+
CiAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOm9ic2VydmF0aW9uPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06bGFiZWw+ZXRobmljaXR5PC9uczF0cmltOmxhYmVsPgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5IaXNwYW5pYyBvciBMYXRpbm88
L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmNvZGU+QzAwMjQ1Nzk8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42
LjU2PC9uczF0cmltOmNvZGVTeXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVt
VmVyc2lvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICA8L25zMXRyaW06dmFsdWU+CiAgICAgICAgICAgICAg
ICAgICAgICAgIDwvbnMxdHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgICA8L25z
MXRyaW06YWN0PgogICAgICAgICAgICAgICAgPC9uczF0cmltOnJlbGF0aW9uc2hpcD4KICAgICAg
ICAgICAgICAgIDxuczF0cmltOnJlbGF0aW9uc2hpcCBkaXJlY3Rpb249IklOIiBuYW1lPSJjb2xs
ZWN0aW9uUHJvdG9jb2wiIHR5cGVDb2RlPSJBUE5EIj4KICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTphY3QgY2xhc3NDb2RlPSJBQ0NNIiBtb29kQ29kZT0iQVBUIj4KICAgICAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06b2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICA8bnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bnMxdHJp
bTpsYWJlbD50aXRsZTwvbnMxdHJpbTpsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpTVD5Ub2x2ZW4gVGVzdCBQcm90b2NvbDwvbnMxdHJpbTpTVD4KICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIDxuczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmxhYmVsPnNob3J0VGl0bGU8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPG5zMXRyaW06U1Q+VFRQPC9uczF0cmltOlNUPgogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgPC9uczF0cmltOnZhbHVlPgogICAgICAgICAgICAgICAgICAgICAg
ICA8L25zMXRyaW06b2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgICAgICAgPC9uczF0cmltOmFj
dD4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpyZWxhdGlvbnNoaXA+CiAgICAgICAgICAgICAg
ICA8bnMxdHJpbTpyZWxhdGlvbnNoaXAgZGlyZWN0aW9uPSJJTiIgbmFtZT0iY2Rtc1N1YmplY3RJ
ZCIgdHlwZUNvZGU9IkFQTkQiPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmFjdCBjbGFz
c0NvZGU9IkFDQ00iIG1vb2RDb2RlPSJBUFQiPgogICAgICAgICAgICAgICAgICAgICAgICA8bnMx
dHJpbTpvYnNlcnZhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOnZh
bHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmxhYmVsPmNkbXNT
dWJqZWN0SWQ8L25zMXRyaW06bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06U1Q+Y3ByVGVzdFBhcnRpY2lwYW50MTAwMDwvbnMxdHJpbTpTVD4KICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZT4KICAgICAgICAgICAgICAgICAgICAg
ICAgPC9uczF0cmltOm9ic2VydmF0aW9uPgogICAgICAgICAgICAgICAgICAgIDwvbnMxdHJpbTph
Y3Q+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06cmVsYXRpb25zaGlwPgogICAgICAgICAgICA8
L25zMXRyaW06YWN0PgogICAgICAgICAgICA8bnMxdHJpbTp2YWx1ZVNldCBuYW1lPSJ0cmVhdG1l
bnRDb25zZW50Qm9vbGVhblZhbHVlcyI+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpDRT4KICAg
ICAgICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5ZZXM8L25zMXRyaW06ZGlzcGxh
eU5hbWU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZT5DMDE4MzEwODwvbnMxdHJp
bTpjb2RlPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAu
MS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lzdGVtPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lv
bj4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpDRT4KICAgICAgICAgICAgICAgIDxuczF0cmlt
OkNFPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmRpc3BsYXlOYW1lPk5vPC9uczF0cmlt
OmRpc3BsYXlOYW1lPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGU+QzAxODMxMDc8
L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtPjIu
MTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5c3RlbT4KICAgICAgICAgICAgICAg
ICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3QUE8L25zMXRyaW06Y29kZVN5c3Rl
bVZlcnNpb24+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06Q0U+CiAgICAgICAgICAgIDwvbnMx
dHJpbTp2YWx1ZVNldD4KICAgICAgICAgICAgPG5zMXRyaW06dmFsdWVTZXQgbmFtZT0idHJlYXRt
ZW50Q29uc2VudE5vUmVhc29ucyI+CiAgICAgICAgICAgICAgICA8bnMxdHJpbTpDRT4KICAgICAg
ICAgICAgICAgICAgICA8bnMxdHJpbTpkaXNwbGF5TmFtZT5EZWNpZGVkIG5vdCB0byBoYXZlIG5l
b2FkanV2YW50IGNoZW1vdGhlcmFweTwvbnMxdHJpbTpkaXNwbGF5TmFtZT4KICAgICAgICAgICAg
ICAgICAgICA8bnMxdHJpbTpjb2RlPkMwMTgzMTA3PC9uczF0cmltOmNvZGU+CiAgICAgICAgICAg
ICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbT4yLjE2Ljg0MC4xLjExMzg4My42LjU2PC9uczF0
cmltOmNvZGVTeXN0ZW0+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29kZVN5c3RlbVZl
cnNpb24+MjAwN0FBPC9uczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPgogICAgICAgICAgICAgICAg
PC9uczF0cmltOkNFPgogICAgICAgICAgICAgICAgPG5zMXRyaW06Q0U+CiAgICAgICAgICAgICAg
ICAgICAgPG5zMXRyaW06ZGlzcGxheU5hbWU+RGVjaWRlZCBub3QgdG8gYmUgdHJlYXRlZCB3aXRo
IGEgbm92ZWwgYWdlbnQ8L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAg
PG5zMXRyaW06Y29kZT5DMDE4MzEwODwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAg
IDxuczF0cmltOmNvZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2Rl
U3lzdGVtPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIw
MDdBQTwvbnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAgICAgICAgIDwvbnMxdHJp
bTpDRT4KICAgICAgICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmRpc3BsYXlOYW1lPlBhdGllbnQgZm91bmQgdG8gYmUgaW5lbGlnaWJsZSBmb3Igc3R1
ZHk8L25zMXRyaW06ZGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICAgICAgPG5zMXRyaW06Y29k
ZT5DMDE4MzEwOTwvbnMxdHJpbTpjb2RlPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmNv
ZGVTeXN0ZW0+Mi4xNi44NDAuMS4xMTM4ODMuNi41NjwvbnMxdHJpbTpjb2RlU3lzdGVtPgogICAg
ICAgICAgICAgICAgICAgIDxuczF0cmltOmNvZGVTeXN0ZW1WZXJzaW9uPjIwMDdBQTwvbnMxdHJp
bTpjb2RlU3lzdGVtVmVyc2lvbj4KICAgICAgICAgICAgICAgIDwvbnMxdHJpbTpDRT4KICAgICAg
ICAgICAgICAgIDxuczF0cmltOkNFPgogICAgICAgICAgICAgICAgICAgIDxuczF0cmltOmRpc3Bs
YXlOYW1lPk90aGVyPC9uczF0cmltOmRpc3BsYXlOYW1lPgogICAgICAgICAgICAgICAgICAgIDxu
czF0cmltOmNvZGU+QzAxODMxMTA8L25zMXRyaW06Y29kZT4KICAgICAgICAgICAgICAgICAgICA8
bnMxdHJpbTpjb2RlU3lzdGVtPjIuMTYuODQwLjEuMTEzODgzLjYuNTY8L25zMXRyaW06Y29kZVN5
c3RlbT4KICAgICAgICAgICAgICAgICAgICA8bnMxdHJpbTpjb2RlU3lzdGVtVmVyc2lvbj4yMDA3
QUE8L25zMXRyaW06Y29kZVN5c3RlbVZlcnNpb24+CiAgICAgICAgICAgICAgICA8L25zMXRyaW06
Q0U+CiAgICAgICAgICAgIDwvbnMxdHJpbTp2YWx1ZVNldD4KICAgICAgICA8L25zMXRyaW06dHJp
bT4KICA8L2NhY2lzOnNvdXJjZURhdGE+CiAgPGNhY2lzOmNsaW5pY2FsTWV0YURhdGEgc2l0ZUlk
Um9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMiIgcGF0aWVudElkUm9vdD0iMi4xNi44NDAuMS4xMTM4
ODMuMyIgc2l0ZUlkRXh0ZW5zaW9uPSJzaXRlX2lkIiBwYXRpZW50SWRFeHRlbnNpb249InBhdGll
bnRfaWRfMSIgc3R1ZHlJZFJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEiIHN0dWR5SWRFeHRlbnNp
b249InN0dWR5X2lkIiBkb2N1bWVudFR5cGU9IkJhc2VsaW5lIFN5bXB0b21zIi8+CjwvY2FjaXM6
Y2FDSVNSZXF1ZXN0Pgo=</inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules>
          <rule>
            <sequenceNumber>0</sequenceNumber>
            <name>Accept message if &quot;$(&apos;msgTyp&apos;)&quot; equals globalMap.get(&apos;AE&apos;) or globalMap.get(&apos;REGN&apos;) or globalMap.get(&apos;UPDTREGN&apos;) or globalMap.get(&apos;SPMN&apos;) or globalMap.get(&apos;UPDTSPMN&apos;) or globalMap.get(&apos;REGTCNST&apos;)</name>
            <data class="map">
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>globalMap.get(&apos;AE&apos;)</string>
                  <string>globalMap.get(&apos;REGN&apos;)</string>
                  <string>globalMap.get(&apos;UPDTREGN&apos;)</string>
                  <string>globalMap.get(&apos;SPMN&apos;)</string>
                  <string>globalMap.get(&apos;UPDTSPMN&apos;)</string>
                  <string>globalMap.get(&apos;REGTCNST&apos;)</string>
                </list>
              </entry>
              <entry>
                <string>Field</string>
                <string>$(&apos;msgTyp&apos;)</string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if($(&apos;msgTyp&apos;) == globalMap.get(&apos;AE&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;REGN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;UPDTREGN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;SPMN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;UPDTSPMN&apos;) || $(&apos;msgTyp&apos;) == globalMap.get(&apos;REGTCNST&apos;))
{
return true;
}
return false;</script>
            <operator>NONE</operator>
          </rule>
          <rule>
            <sequenceNumber>1</sequenceNumber>
            <name>Accept message if &quot;channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;)&quot; equals null</name>
            <data class="map">
              <entry>
                <string>Name</string>
                <string></string>
              </entry>
              <entry>
                <string>Values</string>
                <list>
                  <string>null</string>
                </list>
              </entry>
              <entry>
                <string>Field</string>
                <string>channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;)</string>
              </entry>
              <entry>
                <string>OriginalField</string>
                <string></string>
              </entry>
              <entry>
                <string>Equals</string>
                <string>1</string>
              </entry>
            </data>
            <type>Rule Builder</type>
            <script>if(channelMap.get(&apos;IS_IHUB_PROCESSING_ERROR&apos;) == null)
{
return true;
}
return false;</script>
            <operator>AND</operator>
          </rule>
        </rules>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
    <connector>
      <name>ResponseWriterConnector</name>
      <properties>
        <property name="DataType">JavaScript Writer</property>
        <property name="host">sink</property>
        <property name="script">//get all responses from all destinations and constructs a valid response
var msgTyp = $(&apos;msgTyp&apos;);

logger.info(&quot;inbound rw msgTyp=&quot;+ msgTyp);

if(	msgTyp != globalMap.get(&apos;AE&apos;) 
	&amp;&amp; msgTyp != globalMap.get(&apos;REGN&apos;)
	&amp;&amp; msgTyp != globalMap.get(&apos;UPDTREGN&apos;)
	&amp;&amp; msgTyp != globalMap.get(&apos;SPMN&apos;)
	&amp;&amp; msgTyp != globalMap.get(&apos;UPDTSPMN&apos;)
	&amp;&amp; msgTyp != globalMap.get(&apos;REGTCNST&apos;)
	) {
	var msgParams = [&quot;value1&quot;, &quot;value2&quot;];
	var intgExcp = new Packages.gov.nih.nci.integration.exception.IntegrationException(Packages.gov.nih.nci.integration.exception.IntegrationError._1050, msgParams);
	
	channelMap.put(&apos;IS_IHUB_PROCESSING_ERROR&apos;, intgExcp);
}

var iHubError = $(&apos;IS_IHUB_PROCESSING_ERROR&apos;);
if(iHubError) {
	logger.debug(&quot;iHubError=&quot;+iHubError);
	var iHubResponse =  convertIntgExceptionToIHubResponse(iHubError);
	responseMap.put(&quot;ResponseWriterConnector&quot;, ResponseFactory.getFailureResponse(iHubResponse));
	return;
}

var cacisResponseObj = responseMap.get(&apos;caCISRequestSenderConnector&apos;);
var cacisResponse = cacisResponseObj.getMessage();

//var cacisResponse = responseMap.get(&apos;caCISRequestSenderConnector&apos;);

//TODO: handle cacis response correctly, for now deal with String response
var iHubResponse = null;
logger.debug(&quot;cacisResponse in RW=&quot;+cacisResponse);
if(cacisResponse.contains(&quot;caCISError&quot;)) {

	var cacisErrorRes = new XML(cacisResponse);
	var errCd = cacisErrorRes[&apos;@errorCode&apos;].toString();
	var errDesc = cacisErrorRes[&apos;@errorMessage&apos;].toString();

	var iHubResponse = &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot; standalone=\&quot;yes\&quot;?&gt;&quot;
			+ &quot;&lt;caXchangeError xmlns=\&quot;http://caXchange.nci.nih.gov/messaging\&quot;&gt;&quot;
			+ &quot;&lt;errorCode&gt;&quot;+ errCd +&quot;&lt;/errorCode&gt;&quot;
			+ &quot;&lt;errorDescription&gt;&quot; + errDesc + &quot;&lt;/errorDescription&gt;&quot;
			+ &quot;&lt;/caXchangeError&gt;&quot;;
	responseMap.put(&quot;ResponseWriterConnector&quot;, ResponseFactory.getFailureResponse(iHubResponse));
} else {
	var iHubResponse = &quot;SUCCESS&quot;;
	responseMap.put(&quot;ResponseWriterConnector&quot;, ResponseFactory.getSuccessResponse(iHubResponse));
}



return;</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data

/***************** THESE CAN GO INTO GLOBAL SCRIPTS ****************/
// ################# TranscendInboundChannel authentication values ###########
globalMap.put(&quot;transcend.ihub.client.user&quot;,&quot;@{ihub.user}&quot;);
globalMap.put(&quot;transcend.ihub.client.password&quot;,&quot;@{ihub.password}&quot;);

// #########  FILTER Related Constants ##########
globalMap.put(&quot;AE&quot;,&quot;AE&quot;);
globalMap.put(&quot;REGN&quot;,&quot;Create Registration&quot;);
globalMap.put(&quot;UPDTREGN&quot;,&quot;Update Registration&quot;);
globalMap.put(&quot;SPMN&quot;,&quot;Create Biospecimen&quot;);
globalMap.put(&quot;UPDTSPMN&quot;,&quot;Update Biospecimen&quot;);
globalMap.put(&quot;REGTCNST&quot;,&quot;Register Consent&quot;);

//Load error messages bundle
Packages.gov.nih.nci.integration.util.ErrorMessagesUtil.init(&quot;@{error.messages.location}&quot;);
				      
var commonAppCtx = globalMap.get(&quot;commonAppCtx&quot;);

if(commonAppCtx == null) {
  	commonAppCtx = new Packages.org.springframework.context.support.ClassPathXmlApplicationContext(&quot;classpath*:applicationContext-common.xml&quot;);	
	globalMap.put(&quot;commonAppCtx&quot;, commonAppCtx);
}

var baseXSLClasspath=&quot;@{integration.transformer.xsl.baseClassPath}&quot;;

var inboundMsgToCRTransformer = commonAppCtx.getBean(&quot;xsltTransformer&quot;);
inboundMsgToCRTransformer.initTransformer(&quot;TranscendInboundMsg-to-caCISRequest.xsl&quot;, baseXSLClasspath);

logger.info(&quot;inboundMsgToCRTransformer=&quot; + inboundMsgToCRTransformer);

globalMap.put(&quot;inboundMsgToCRTransformer&quot;, inboundMsgToCRTransformer);

var iHubMessageDao = commonAppCtx.getBean(&quot;iHubMessageDao&quot;);
globalMap.put(&quot;iHubMessageDao&quot;, iHubMessageDao);

var cacisWsdlUrl = &quot;@{transcend.sa.url}?wsdl&quot;;
globalMap.put(&quot;CaCISWsdlUrl&quot;, cacisWsdlUrl);

var client = new Packages.gov.nih.nci.cacis.sa.transcend.client.TranscendSemanticAdapterClient();
globalMap.put(&quot;CaCISClient&quot;, client);

return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>